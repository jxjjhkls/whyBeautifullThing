ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC_SAP.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	ADC_SAP_initVar
  18              		.bss
  19              		.type	ADC_SAP_initVar, %object
  20              		.size	ADC_SAP_initVar, 1
  21              	ADC_SAP_initVar:
  22 0000 00       		.space	1
  23              		.comm	ADC_SAP_offset,2,4
  24              		.comm	ADC_SAP_countsPer10Volt,4,4
  25              		.section	.rodata
  26              		.align	2
  27              		.type	ADC_SAP_channelsConfig, %object
  28              		.size	ADC_SAP_channelsConfig, 4
  29              	ADC_SAP_channelsConfig:
  30 0000 00000000 		.space	4
  31              		.section	.text.ADC_SAP_Start,"ax",%progbits
  32              		.align	2
  33              		.global	ADC_SAP_Start
  34              		.code	16
  35              		.thumb_func
  36              		.type	ADC_SAP_Start, %function
  37              	ADC_SAP_Start:
  38              	.LFB2:
  39              		.file 1 ".\\Generated_Source\\PSoC4\\ADC_SAP.c"
   1:.\Generated_Source\PSoC4/ADC_SAP.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ADC_SAP.c **** * File Name: ADC_SAP.c
   3:.\Generated_Source\PSoC4/ADC_SAP.c **** * Version 2.40
   4:.\Generated_Source\PSoC4/ADC_SAP.c **** *
   5:.\Generated_Source\PSoC4/ADC_SAP.c **** * Description:
   6:.\Generated_Source\PSoC4/ADC_SAP.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/ADC_SAP.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/ADC_SAP.c **** *
   9:.\Generated_Source\PSoC4/ADC_SAP.c **** * Note:
  10:.\Generated_Source\PSoC4/ADC_SAP.c **** *
  11:.\Generated_Source\PSoC4/ADC_SAP.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/ADC_SAP.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ADC_SAP.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ADC_SAP.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ADC_SAP.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/ADC_SAP.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/ADC_SAP.c **** 
  18:.\Generated_Source\PSoC4/ADC_SAP.c **** #include "ADC_SAP.h"
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 2


  19:.\Generated_Source\PSoC4/ADC_SAP.c **** 
  20:.\Generated_Source\PSoC4/ADC_SAP.c **** 
  21:.\Generated_Source\PSoC4/ADC_SAP.c **** /***************************************
  22:.\Generated_Source\PSoC4/ADC_SAP.c **** * Global data allocation
  23:.\Generated_Source\PSoC4/ADC_SAP.c **** ***************************************/
  24:.\Generated_Source\PSoC4/ADC_SAP.c **** uint8 ADC_SAP_initVar = 0u;
  25:.\Generated_Source\PSoC4/ADC_SAP.c **** volatile int16 ADC_SAP_offset[ADC_SAP_TOTAL_CHANNELS_NUM];
  26:.\Generated_Source\PSoC4/ADC_SAP.c **** volatile int32 ADC_SAP_countsPer10Volt[ADC_SAP_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:.\Generated_Source\PSoC4/ADC_SAP.c **** 
  28:.\Generated_Source\PSoC4/ADC_SAP.c **** 
  29:.\Generated_Source\PSoC4/ADC_SAP.c **** /***************************************
  30:.\Generated_Source\PSoC4/ADC_SAP.c **** * Local data allocation
  31:.\Generated_Source\PSoC4/ADC_SAP.c **** ***************************************/
  32:.\Generated_Source\PSoC4/ADC_SAP.c **** /* Channels configuration generated by customiser */
  33:.\Generated_Source\PSoC4/ADC_SAP.c **** static const uint32 CYCODE ADC_SAP_channelsConfig[] = { 0x00000000u };
  34:.\Generated_Source\PSoC4/ADC_SAP.c **** 
  35:.\Generated_Source\PSoC4/ADC_SAP.c **** 
  36:.\Generated_Source\PSoC4/ADC_SAP.c **** /*******************************************************************************
  37:.\Generated_Source\PSoC4/ADC_SAP.c **** * Function Name: ADC_SAP_Start
  38:.\Generated_Source\PSoC4/ADC_SAP.c **** ********************************************************************************
  39:.\Generated_Source\PSoC4/ADC_SAP.c **** *
  40:.\Generated_Source\PSoC4/ADC_SAP.c **** * Summary:
  41:.\Generated_Source\PSoC4/ADC_SAP.c **** *  Performs all required initialization for this component
  42:.\Generated_Source\PSoC4/ADC_SAP.c **** *  and enables the power. The power will be set to the appropriate
  43:.\Generated_Source\PSoC4/ADC_SAP.c **** *  power based on the clock frequency.
  44:.\Generated_Source\PSoC4/ADC_SAP.c **** *
  45:.\Generated_Source\PSoC4/ADC_SAP.c **** * Parameters:
  46:.\Generated_Source\PSoC4/ADC_SAP.c **** *  None.
  47:.\Generated_Source\PSoC4/ADC_SAP.c **** *
  48:.\Generated_Source\PSoC4/ADC_SAP.c **** * Return:
  49:.\Generated_Source\PSoC4/ADC_SAP.c **** *  None.
  50:.\Generated_Source\PSoC4/ADC_SAP.c **** *
  51:.\Generated_Source\PSoC4/ADC_SAP.c **** * Global variables:
  52:.\Generated_Source\PSoC4/ADC_SAP.c **** *  The ADC_SAP_initVar variable is used to indicate when/if initial
  53:.\Generated_Source\PSoC4/ADC_SAP.c **** *  configuration of this component has happened. The variable is initialized to
  54:.\Generated_Source\PSoC4/ADC_SAP.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:.\Generated_Source\PSoC4/ADC_SAP.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:.\Generated_Source\PSoC4/ADC_SAP.c **** *  ADC_SAP_Start() routine.
  57:.\Generated_Source\PSoC4/ADC_SAP.c **** *  If re-initialization of the component is required the variable should be set
  58:.\Generated_Source\PSoC4/ADC_SAP.c **** *  to zero before call of ADC_SAP_Start() routine, or the user may call
  59:.\Generated_Source\PSoC4/ADC_SAP.c **** *  ADC_SAP_Init() and ADC_SAP_Enable() as done in the
  60:.\Generated_Source\PSoC4/ADC_SAP.c **** *  ADC_SAP_Start() routine.
  61:.\Generated_Source\PSoC4/ADC_SAP.c **** *
  62:.\Generated_Source\PSoC4/ADC_SAP.c **** *******************************************************************************/
  63:.\Generated_Source\PSoC4/ADC_SAP.c **** void ADC_SAP_Start(void)
  64:.\Generated_Source\PSoC4/ADC_SAP.c **** {
  40              		.loc 1 64 0
  41              		.cfi_startproc
  42 0000 80B5     		push	{r7, lr}
  43              		.cfi_def_cfa_offset 8
  44              		.cfi_offset 7, -8
  45              		.cfi_offset 14, -4
  46 0002 00AF     		add	r7, sp, #0
  47              		.cfi_def_cfa_register 7
  65:.\Generated_Source\PSoC4/ADC_SAP.c ****     /* If not Initialized then initialize all required hardware and software */
  66:.\Generated_Source\PSoC4/ADC_SAP.c ****     if(ADC_SAP_initVar == 0u)
  48              		.loc 1 66 0
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 3


  49 0004 064B     		ldr	r3, .L3
  50 0006 1B78     		ldrb	r3, [r3]
  51 0008 002B     		cmp	r3, #0
  52 000a 04D1     		bne	.L2
  67:.\Generated_Source\PSoC4/ADC_SAP.c ****     {
  68:.\Generated_Source\PSoC4/ADC_SAP.c ****         ADC_SAP_Init();
  53              		.loc 1 68 0
  54 000c FFF7FEFF 		bl	ADC_SAP_Init
  69:.\Generated_Source\PSoC4/ADC_SAP.c ****         ADC_SAP_initVar = 1u;
  55              		.loc 1 69 0
  56 0010 034B     		ldr	r3, .L3
  57 0012 0122     		mov	r2, #1
  58 0014 1A70     		strb	r2, [r3]
  59              	.L2:
  70:.\Generated_Source\PSoC4/ADC_SAP.c ****     }
  71:.\Generated_Source\PSoC4/ADC_SAP.c ****     ADC_SAP_Enable();
  60              		.loc 1 71 0
  61 0016 FFF7FEFF 		bl	ADC_SAP_Enable
  72:.\Generated_Source\PSoC4/ADC_SAP.c **** }
  62              		.loc 1 72 0
  63 001a BD46     		mov	sp, r7
  64              		@ sp needed
  65 001c 80BD     		pop	{r7, pc}
  66              	.L4:
  67 001e C046     		.align	2
  68              	.L3:
  69 0020 00000000 		.word	ADC_SAP_initVar
  70              		.cfi_endproc
  71              	.LFE2:
  72              		.size	ADC_SAP_Start, .-ADC_SAP_Start
  73              		.global	__aeabi_idiv
  74              		.section	.text.ADC_SAP_Init,"ax",%progbits
  75              		.align	2
  76              		.global	ADC_SAP_Init
  77              		.code	16
  78              		.thumb_func
  79              		.type	ADC_SAP_Init, %function
  80              	ADC_SAP_Init:
  81              	.LFB3:
  73:.\Generated_Source\PSoC4/ADC_SAP.c **** 
  74:.\Generated_Source\PSoC4/ADC_SAP.c **** 
  75:.\Generated_Source\PSoC4/ADC_SAP.c **** /*******************************************************************************
  76:.\Generated_Source\PSoC4/ADC_SAP.c **** * Function Name: ADC_SAP_Init
  77:.\Generated_Source\PSoC4/ADC_SAP.c **** ********************************************************************************
  78:.\Generated_Source\PSoC4/ADC_SAP.c **** *
  79:.\Generated_Source\PSoC4/ADC_SAP.c **** * Summary:
  80:.\Generated_Source\PSoC4/ADC_SAP.c **** *  Initialize component's parameters to the parameters set by user in the
  81:.\Generated_Source\PSoC4/ADC_SAP.c **** *  customizer of the component placed onto schematic. Usually called in
  82:.\Generated_Source\PSoC4/ADC_SAP.c **** *  ADC_SAP_Start().
  83:.\Generated_Source\PSoC4/ADC_SAP.c **** *
  84:.\Generated_Source\PSoC4/ADC_SAP.c **** * Parameters:
  85:.\Generated_Source\PSoC4/ADC_SAP.c **** *  None.
  86:.\Generated_Source\PSoC4/ADC_SAP.c **** *
  87:.\Generated_Source\PSoC4/ADC_SAP.c **** * Return:
  88:.\Generated_Source\PSoC4/ADC_SAP.c **** *  None.
  89:.\Generated_Source\PSoC4/ADC_SAP.c **** *
  90:.\Generated_Source\PSoC4/ADC_SAP.c **** * Global variables:
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 4


  91:.\Generated_Source\PSoC4/ADC_SAP.c **** *  The ADC_SAP_offset variable is initialized.
  92:.\Generated_Source\PSoC4/ADC_SAP.c **** *
  93:.\Generated_Source\PSoC4/ADC_SAP.c **** *******************************************************************************/
  94:.\Generated_Source\PSoC4/ADC_SAP.c **** void ADC_SAP_Init(void)
  95:.\Generated_Source\PSoC4/ADC_SAP.c **** {
  82              		.loc 1 95 0
  83              		.cfi_startproc
  84 0000 80B5     		push	{r7, lr}
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 7, -8
  87              		.cfi_offset 14, -4
  88 0002 84B0     		sub	sp, sp, #16
  89              		.cfi_def_cfa_offset 24
  90 0004 00AF     		add	r7, sp, #0
  91              		.cfi_def_cfa_register 7
  96:.\Generated_Source\PSoC4/ADC_SAP.c ****     uint32 chNum;
  97:.\Generated_Source\PSoC4/ADC_SAP.c ****     uint32 tmpRegVal;
  98:.\Generated_Source\PSoC4/ADC_SAP.c ****     int32 counts;
  99:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 100:.\Generated_Source\PSoC4/ADC_SAP.c ****     #if(ADC_SAP_TOTAL_CHANNELS_NUM > 1u)
 101:.\Generated_Source\PSoC4/ADC_SAP.c ****         static const uint8 CYCODE ADC_SAP_InputsPlacement[] =
 102:.\Generated_Source\PSoC4/ADC_SAP.c ****         {
 103:.\Generated_Source\PSoC4/ADC_SAP.c ****             (uint8)(ADC_SAP_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:.\Generated_Source\PSoC4/ADC_SAP.c ****             (uint8)ADC_SAP_cy_psoc4_sarmux_8__CH_0_PIN
 105:.\Generated_Source\PSoC4/ADC_SAP.c ****             ,(uint8)(ADC_SAP_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:.\Generated_Source\PSoC4/ADC_SAP.c ****              (uint8)ADC_SAP_cy_psoc4_sarmux_8__CH_1_PIN
 107:.\Generated_Source\PSoC4/ADC_SAP.c ****             #if(ADC_SAP_TOTAL_CHANNELS_NUM > 2u)
 108:.\Generated_Source\PSoC4/ADC_SAP.c ****                 ,(uint8)(ADC_SAP_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:.\Generated_Source\PSoC4/ADC_SAP.c ****                  (uint8)ADC_SAP_cy_psoc4_sarmux_8__CH_2_PIN
 110:.\Generated_Source\PSoC4/ADC_SAP.c ****             #endif /* End ADC_SAP_TOTAL_CHANNELS_NUM > 2u */
 111:.\Generated_Source\PSoC4/ADC_SAP.c ****             #if(ADC_SAP_TOTAL_CHANNELS_NUM > 3u)
 112:.\Generated_Source\PSoC4/ADC_SAP.c ****                 ,(uint8)(ADC_SAP_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:.\Generated_Source\PSoC4/ADC_SAP.c ****                  (uint8)ADC_SAP_cy_psoc4_sarmux_8__CH_3_PIN
 114:.\Generated_Source\PSoC4/ADC_SAP.c ****             #endif /* End ADC_SAP_TOTAL_CHANNELS_NUM > 3u */
 115:.\Generated_Source\PSoC4/ADC_SAP.c ****             #if(ADC_SAP_TOTAL_CHANNELS_NUM > 4u)
 116:.\Generated_Source\PSoC4/ADC_SAP.c ****                 ,(uint8)(ADC_SAP_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:.\Generated_Source\PSoC4/ADC_SAP.c ****                  (uint8)ADC_SAP_cy_psoc4_sarmux_8__CH_4_PIN
 118:.\Generated_Source\PSoC4/ADC_SAP.c ****             #endif /* End ADC_SAP_TOTAL_CHANNELS_NUM > 4u */
 119:.\Generated_Source\PSoC4/ADC_SAP.c ****             #if(ADC_SAP_TOTAL_CHANNELS_NUM > 5u)
 120:.\Generated_Source\PSoC4/ADC_SAP.c ****                 ,(uint8)(ADC_SAP_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:.\Generated_Source\PSoC4/ADC_SAP.c ****                  (uint8)ADC_SAP_cy_psoc4_sarmux_8__CH_5_PIN
 122:.\Generated_Source\PSoC4/ADC_SAP.c ****             #endif /* End ADC_SAP_TOTAL_CHANNELS_NUM > 5u */
 123:.\Generated_Source\PSoC4/ADC_SAP.c ****             #if(ADC_SAP_TOTAL_CHANNELS_NUM > 6u)
 124:.\Generated_Source\PSoC4/ADC_SAP.c ****                 ,(uint8)(ADC_SAP_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:.\Generated_Source\PSoC4/ADC_SAP.c ****                  (uint8)ADC_SAP_cy_psoc4_sarmux_8__CH_6_PIN
 126:.\Generated_Source\PSoC4/ADC_SAP.c ****             #endif /* End ADC_SAP_TOTAL_CHANNELS_NUM > 6u */
 127:.\Generated_Source\PSoC4/ADC_SAP.c ****             #if(ADC_SAP_TOTAL_CHANNELS_NUM > 7u)
 128:.\Generated_Source\PSoC4/ADC_SAP.c ****                 ,(uint8)(ADC_SAP_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:.\Generated_Source\PSoC4/ADC_SAP.c ****                  (uint8)ADC_SAP_cy_psoc4_sarmux_8__CH_7_PIN
 130:.\Generated_Source\PSoC4/ADC_SAP.c ****             #endif /* End ADC_SAP_TOTAL_CHANNELS_NUM > 7u */
 131:.\Generated_Source\PSoC4/ADC_SAP.c ****             #if(ADC_SAP_TOTAL_CHANNELS_NUM > 8u)
 132:.\Generated_Source\PSoC4/ADC_SAP.c ****                 ,(uint8)(ADC_SAP_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:.\Generated_Source\PSoC4/ADC_SAP.c ****                  (uint8)ADC_SAP_cy_psoc4_sarmux_8__CH_8_PIN
 134:.\Generated_Source\PSoC4/ADC_SAP.c ****             #endif /* End ADC_SAP_TOTAL_CHANNELS_NUM > 8u */
 135:.\Generated_Source\PSoC4/ADC_SAP.c ****             #if(ADC_SAP_TOTAL_CHANNELS_NUM > 9u)
 136:.\Generated_Source\PSoC4/ADC_SAP.c ****                 ,(uint8)(ADC_SAP_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:.\Generated_Source\PSoC4/ADC_SAP.c ****                  (uint8)ADC_SAP_cy_psoc4_sarmux_8__CH_9_PIN
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 5


 138:.\Generated_Source\PSoC4/ADC_SAP.c ****             #endif /* End ADC_SAP_TOTAL_CHANNELS_NUM > 9u */
 139:.\Generated_Source\PSoC4/ADC_SAP.c ****             #if(ADC_SAP_TOTAL_CHANNELS_NUM > 10u)
 140:.\Generated_Source\PSoC4/ADC_SAP.c ****                 ,(uint8)(ADC_SAP_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:.\Generated_Source\PSoC4/ADC_SAP.c ****                  (uint8)ADC_SAP_cy_psoc4_sarmux_8__CH_10_PIN
 142:.\Generated_Source\PSoC4/ADC_SAP.c ****             #endif /* End ADC_SAP_TOTAL_CHANNELS_NUM > 10u */
 143:.\Generated_Source\PSoC4/ADC_SAP.c ****             #if(ADC_SAP_TOTAL_CHANNELS_NUM > 11u)
 144:.\Generated_Source\PSoC4/ADC_SAP.c ****                 ,(uint8)(ADC_SAP_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:.\Generated_Source\PSoC4/ADC_SAP.c ****                  (uint8)ADC_SAP_cy_psoc4_sarmux_8__CH_11_PIN
 146:.\Generated_Source\PSoC4/ADC_SAP.c ****             #endif /* End ADC_SAP_TOTAL_CHANNELS_NUM > 11u */
 147:.\Generated_Source\PSoC4/ADC_SAP.c ****             #if(ADC_SAP_TOTAL_CHANNELS_NUM > 12u)
 148:.\Generated_Source\PSoC4/ADC_SAP.c ****                 ,(uint8)(ADC_SAP_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:.\Generated_Source\PSoC4/ADC_SAP.c ****                  (uint8)ADC_SAP_cy_psoc4_sarmux_8__CH_12_PIN
 150:.\Generated_Source\PSoC4/ADC_SAP.c ****             #endif /* End ADC_SAP_TOTAL_CHANNELS_NUM > 12u */
 151:.\Generated_Source\PSoC4/ADC_SAP.c ****             #if(ADC_SAP_TOTAL_CHANNELS_NUM > 13u)
 152:.\Generated_Source\PSoC4/ADC_SAP.c ****                 ,(uint8)(ADC_SAP_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:.\Generated_Source\PSoC4/ADC_SAP.c ****                  (uint8)ADC_SAP_cy_psoc4_sarmux_8__CH_13_PIN
 154:.\Generated_Source\PSoC4/ADC_SAP.c ****             #endif /* End ADC_SAP_TOTAL_CHANNELS_NUM > 13u */
 155:.\Generated_Source\PSoC4/ADC_SAP.c ****             #if(ADC_SAP_TOTAL_CHANNELS_NUM > 14u)
 156:.\Generated_Source\PSoC4/ADC_SAP.c ****                 ,(uint8)(ADC_SAP_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:.\Generated_Source\PSoC4/ADC_SAP.c ****                  (uint8)ADC_SAP_cy_psoc4_sarmux_8__CH_14_PIN
 158:.\Generated_Source\PSoC4/ADC_SAP.c ****             #endif /* End ADC_SAP_TOTAL_CHANNELS_NUM > 14u */
 159:.\Generated_Source\PSoC4/ADC_SAP.c ****             #if(ADC_SAP_TOTAL_CHANNELS_NUM > 15u)
 160:.\Generated_Source\PSoC4/ADC_SAP.c ****                 ,(uint8)(ADC_SAP_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:.\Generated_Source\PSoC4/ADC_SAP.c ****                  (uint8)ADC_SAP_cy_psoc4_sarmux_8__CH_15_PIN
 162:.\Generated_Source\PSoC4/ADC_SAP.c ****             #endif /* End ADC_SAP_TOTAL_CHANNELS_NUM > 15u */
 163:.\Generated_Source\PSoC4/ADC_SAP.c ****             #if(ADC_SAP_TOTAL_CHANNELS_NUM > 16u)
 164:.\Generated_Source\PSoC4/ADC_SAP.c ****                 ,(uint8)(ADC_SAP_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:.\Generated_Source\PSoC4/ADC_SAP.c ****                  (uint8)ADC_SAP_cy_psoc4_sarmux_8__CH_16_PIN
 166:.\Generated_Source\PSoC4/ADC_SAP.c ****             #endif /* End ADC_SAP_TOTAL_CHANNELS_NUM > 16u */
 167:.\Generated_Source\PSoC4/ADC_SAP.c ****         };
 168:.\Generated_Source\PSoC4/ADC_SAP.c ****     #endif /* End ADC_SAP_TOTAL_CHANNELS_NUM > 1u */
 169:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 170:.\Generated_Source\PSoC4/ADC_SAP.c ****     #if(ADC_SAP_IRQ_REMOVE == 0u)
 171:.\Generated_Source\PSoC4/ADC_SAP.c ****         /* Start and set interrupt vector */
 172:.\Generated_Source\PSoC4/ADC_SAP.c ****         CyIntSetPriority(ADC_SAP_INTC_NUMBER, ADC_SAP_INTC_PRIOR_NUMBER);
  92              		.loc 1 172 0
  93 0006 0F20     		mov	r0, #15
  94 0008 0321     		mov	r1, #3
  95 000a FFF7FEFF 		bl	CyIntSetPriority
 173:.\Generated_Source\PSoC4/ADC_SAP.c ****         (void)CyIntSetVector(ADC_SAP_INTC_NUMBER, &ADC_SAP_ISR);
  96              		.loc 1 173 0
  97 000e 534B     		ldr	r3, .L16
  98 0010 0F20     		mov	r0, #15
  99 0012 191C     		mov	r1, r3
 100 0014 FFF7FEFF 		bl	CyIntSetVector
 174:.\Generated_Source\PSoC4/ADC_SAP.c ****     #endif   /* End ADC_SAP_IRQ_REMOVE */
 175:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 176:.\Generated_Source\PSoC4/ADC_SAP.c ****     /* Init SAR and MUX registers */
 177:.\Generated_Source\PSoC4/ADC_SAP.c ****     ADC_SAP_SAR_CHAN_EN_REG = ADC_SAP_DEFAULT_EN_CHANNELS;
 101              		.loc 1 177 0
 102 0018 514B     		ldr	r3, .L16+4
 103 001a 0122     		mov	r2, #1
 104 001c 1A60     		str	r2, [r3]
 178:.\Generated_Source\PSoC4/ADC_SAP.c ****     ADC_SAP_SAR_CTRL_REG |= ADC_SAP_DEFAULT_CTRL_REG_CFG | 
 179:.\Generated_Source\PSoC4/ADC_SAP.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:.\Generated_Source\PSoC4/ADC_SAP.c ****         (((ADC_SAP_PUMP_CTRL_REG & ADC_SAP_PUMP_CTRL_ENABLED) != 0u) ? 
 105              		.loc 1 180 0
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 6


 106 001e 514B     		ldr	r3, .L16+8
 107 0020 1B68     		ldr	r3, [r3]
 178:.\Generated_Source\PSoC4/ADC_SAP.c ****     ADC_SAP_SAR_CTRL_REG |= ADC_SAP_DEFAULT_CTRL_REG_CFG | 
 108              		.loc 1 178 0
 109 0022 002B     		cmp	r3, #0
 110 0024 01DA     		bge	.L6
 178:.\Generated_Source\PSoC4/ADC_SAP.c ****     ADC_SAP_SAR_CTRL_REG |= ADC_SAP_DEFAULT_CTRL_REG_CFG | 
 111              		.loc 1 178 0 is_stmt 0 discriminator 1
 112 0026 5049     		ldr	r1, .L16+12
 113 0028 00E0     		b	.L7
 114              	.L6:
 178:.\Generated_Source\PSoC4/ADC_SAP.c ****     ADC_SAP_SAR_CTRL_REG |= ADC_SAP_DEFAULT_CTRL_REG_CFG | 
 115              		.loc 1 178 0 discriminator 2
 116 002a 5049     		ldr	r1, .L16+16
 117              	.L7:
 178:.\Generated_Source\PSoC4/ADC_SAP.c ****     ADC_SAP_SAR_CTRL_REG |= ADC_SAP_DEFAULT_CTRL_REG_CFG | 
 118              		.loc 1 178 0 discriminator 4
 119 002c 504B     		ldr	r3, .L16+20
 120 002e 504A     		ldr	r2, .L16+20
 121 0030 1268     		ldr	r2, [r2]
 122 0032 0A43     		orr	r2, r1
 123 0034 1A60     		str	r2, [r3]
 181:.\Generated_Source\PSoC4/ADC_SAP.c ****         ADC_SAP_BOOSTPUMP_EN : 0u);
 182:.\Generated_Source\PSoC4/ADC_SAP.c ****     ADC_SAP_SAR_SAMPLE_CTRL_REG = ADC_SAP_DEFAULT_SAMPLE_CTRL_REG_CFG;
 124              		.loc 1 182 0 is_stmt 1 discriminator 4
 125 0036 4F4B     		ldr	r3, .L16+24
 126 0038 4F4A     		ldr	r2, .L16+28
 127 003a 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/ADC_SAP.c ****     ADC_SAP_SAR_RANGE_THRES_REG = ADC_SAP_DEFAULT_RANGE_THRES_REG_CFG;
 128              		.loc 1 183 0 discriminator 4
 129 003c 4F4B     		ldr	r3, .L16+32
 130 003e 504A     		ldr	r2, .L16+36
 131 0040 1A60     		str	r2, [r3]
 184:.\Generated_Source\PSoC4/ADC_SAP.c ****     ADC_SAP_SAR_RANGE_COND_REG  = ADC_SAP_COMPARE_MODE;
 132              		.loc 1 184 0 discriminator 4
 133 0042 504B     		ldr	r3, .L16+40
 134 0044 0022     		mov	r2, #0
 135 0046 1A60     		str	r2, [r3]
 185:.\Generated_Source\PSoC4/ADC_SAP.c ****     ADC_SAP_SAR_SAMPLE_TIME01_REG = ADC_SAP_DEFAULT_SAMPLE_TIME01_REG_CFG;
 136              		.loc 1 185 0 discriminator 4
 137 0048 4F4B     		ldr	r3, .L16+44
 138 004a 504A     		ldr	r2, .L16+48
 139 004c 1A60     		str	r2, [r3]
 186:.\Generated_Source\PSoC4/ADC_SAP.c ****     ADC_SAP_SAR_SAMPLE_TIME23_REG = ADC_SAP_DEFAULT_SAMPLE_TIME23_REG_CFG;
 140              		.loc 1 186 0 discriminator 4
 141 004e 504B     		ldr	r3, .L16+52
 142 0050 4E4A     		ldr	r2, .L16+48
 143 0052 1A60     		str	r2, [r3]
 187:.\Generated_Source\PSoC4/ADC_SAP.c ****     
 188:.\Generated_Source\PSoC4/ADC_SAP.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:.\Generated_Source\PSoC4/ADC_SAP.c ****     #if(ADC_SAP_DEFAULT_MUX_SWITCH0 != 0u)
 190:.\Generated_Source\PSoC4/ADC_SAP.c ****         ADC_SAP_MUX_SWITCH0_REG |= ADC_SAP_DEFAULT_MUX_SWITCH0;
 144              		.loc 1 190 0 discriminator 4
 145 0054 4F4B     		ldr	r3, .L16+56
 146 0056 4F4A     		ldr	r2, .L16+56
 147 0058 1268     		ldr	r2, [r2]
 148 005a 8021     		mov	r1, #128
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 7


 149 005c 4902     		lsl	r1, r1, #9
 150 005e 0A43     		orr	r2, r1
 151 0060 1A60     		str	r2, [r3]
 191:.\Generated_Source\PSoC4/ADC_SAP.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:.\Generated_Source\PSoC4/ADC_SAP.c ****         #if(ADC_SAP_TOTAL_CHANNELS_NUM > 1u)
 193:.\Generated_Source\PSoC4/ADC_SAP.c ****             ADC_SAP_MUX_SWITCH_HW_CTRL_REG |= ADC_SAP_DEFAULT_MUX_SWITCH0;
 194:.\Generated_Source\PSoC4/ADC_SAP.c ****         #endif /* ADC_SAP_TOTAL_CHANNELS_NUM > 1u */
 195:.\Generated_Source\PSoC4/ADC_SAP.c ****     #endif /*ADC_SAP_CHANNELS_MODE !=0 */
 196:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 197:.\Generated_Source\PSoC4/ADC_SAP.c ****     ADC_SAP_SAR_SATURATE_INTR_MASK_REG = 0u;
 152              		.loc 1 197 0 discriminator 4
 153 0062 4D4B     		ldr	r3, .L16+60
 154 0064 0022     		mov	r2, #0
 155 0066 1A60     		str	r2, [r3]
 198:.\Generated_Source\PSoC4/ADC_SAP.c ****     ADC_SAP_SAR_RANGE_INTR_MASK_REG = 0u;
 156              		.loc 1 198 0 discriminator 4
 157 0068 4C4B     		ldr	r3, .L16+64
 158 006a 0022     		mov	r2, #0
 159 006c 1A60     		str	r2, [r3]
 199:.\Generated_Source\PSoC4/ADC_SAP.c ****     ADC_SAP_SAR_INTR_MASK_REG = ADC_SAP_SAR_INTR_MASK;
 160              		.loc 1 199 0 discriminator 4
 161 006e 4C4B     		ldr	r3, .L16+68
 162 0070 0122     		mov	r2, #1
 163 0072 1A60     		str	r2, [r3]
 200:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 201:.\Generated_Source\PSoC4/ADC_SAP.c ****     #if(ADC_SAP_CY_SAR_IP_VER == ADC_SAP_CY_SAR_IP_VER0)
 202:.\Generated_Source\PSoC4/ADC_SAP.c ****         ADC_SAP_ANA_TRIM_REG = ADC_SAP_TRIM_COEF;
 203:.\Generated_Source\PSoC4/ADC_SAP.c ****     #endif /* (ADC_SAP_CY_SAR_IP_VER == ADC_SAP_CY_SAR_IP_VER0) */
 204:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 205:.\Generated_Source\PSoC4/ADC_SAP.c ****     /* Read and modify default configuration based on characterization */
 206:.\Generated_Source\PSoC4/ADC_SAP.c ****     tmpRegVal = ADC_SAP_SAR_DFT_CTRL_REG;
 164              		.loc 1 206 0 discriminator 4
 165 0074 4B4B     		ldr	r3, .L16+72
 166 0076 1B68     		ldr	r3, [r3]
 167 0078 7B60     		str	r3, [r7, #4]
 207:.\Generated_Source\PSoC4/ADC_SAP.c ****     tmpRegVal &= (uint32)~ADC_SAP_DCEN;
 168              		.loc 1 207 0 discriminator 4
 169 007a 7B68     		ldr	r3, [r7, #4]
 170 007c 4A4A     		ldr	r2, .L16+76
 171 007e 1340     		and	r3, r2
 172 0080 7B60     		str	r3, [r7, #4]
 208:.\Generated_Source\PSoC4/ADC_SAP.c ****     
 209:.\Generated_Source\PSoC4/ADC_SAP.c ****     #if(ADC_SAP_CY_SAR_IP_VER == ADC_SAP_CY_SAR_IP_VER0)
 210:.\Generated_Source\PSoC4/ADC_SAP.c ****         #if(ADC_SAP_NOMINAL_CLOCK_FREQ > (ADC_SAP_MAX_FREQUENCY / 2))
 211:.\Generated_Source\PSoC4/ADC_SAP.c ****             tmpRegVal |= ADC_SAP_SEL_CSEL_DFT_CHAR;
 212:.\Generated_Source\PSoC4/ADC_SAP.c ****         #else  /* clock speed < 9 Mhz */
 213:.\Generated_Source\PSoC4/ADC_SAP.c ****             tmpRegVal |= ADC_SAP_DLY_INC;
 214:.\Generated_Source\PSoC4/ADC_SAP.c ****         #endif /* clock speed > 9 Mhz */
 215:.\Generated_Source\PSoC4/ADC_SAP.c ****     #else
 216:.\Generated_Source\PSoC4/ADC_SAP.c ****         #if ((ADC_SAP_DEFAULT_VREF_SEL == ADC_SAP__INTERNAL1024) || \
 217:.\Generated_Source\PSoC4/ADC_SAP.c ****              (ADC_SAP_DEFAULT_VREF_SEL == ADC_SAP__INTERNALVREF))
 218:.\Generated_Source\PSoC4/ADC_SAP.c ****             tmpRegVal |= ADC_SAP_DLY_INC;
 219:.\Generated_Source\PSoC4/ADC_SAP.c ****         #else
 220:.\Generated_Source\PSoC4/ADC_SAP.c ****             tmpRegVal |= ADC_SAP_DCEN;
 173              		.loc 1 220 0 discriminator 4
 174 0082 7B68     		ldr	r3, [r7, #4]
 175 0084 8022     		mov	r2, #128
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 8


 176 0086 9205     		lsl	r2, r2, #22
 177 0088 1343     		orr	r3, r2
 178 008a 7B60     		str	r3, [r7, #4]
 221:.\Generated_Source\PSoC4/ADC_SAP.c ****             tmpRegVal &= (uint32)~ADC_SAP_DLY_INC;
 179              		.loc 1 221 0 discriminator 4
 180 008c 7B68     		ldr	r3, [r7, #4]
 181 008e 0122     		mov	r2, #1
 182 0090 9343     		bic	r3, r2
 183 0092 7B60     		str	r3, [r7, #4]
 222:.\Generated_Source\PSoC4/ADC_SAP.c ****         #endif /* ((ADC_SAP_DEFAULT_VREF_SEL == ADC_SAP__INTERNAL1024) || \
 223:.\Generated_Source\PSoC4/ADC_SAP.c ****                    (ADC_SAP_DEFAULT_VREF_SEL == ADC_SAP__INTERNALVREF)) */
 224:.\Generated_Source\PSoC4/ADC_SAP.c ****     #endif /* (ADC_SAP_CY_SAR_IP_VER == ADC_SAP_CY_SAR_IP_VER0) */
 225:.\Generated_Source\PSoC4/ADC_SAP.c ****     
 226:.\Generated_Source\PSoC4/ADC_SAP.c ****     ADC_SAP_SAR_DFT_CTRL_REG = tmpRegVal;
 184              		.loc 1 226 0 discriminator 4
 185 0094 434B     		ldr	r3, .L16+72
 186 0096 7A68     		ldr	r2, [r7, #4]
 187 0098 1A60     		str	r2, [r3]
 227:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 228:.\Generated_Source\PSoC4/ADC_SAP.c ****     #if(ADC_SAP_MAX_RESOLUTION != ADC_SAP_RESOLUTION_12)
 229:.\Generated_Source\PSoC4/ADC_SAP.c ****         ADC_SAP_WOUNDING_REG = ADC_SAP_ALT_WOUNDING;
 230:.\Generated_Source\PSoC4/ADC_SAP.c ****     #endif /* ADC_SAP_MAX_RESOLUTION != ADC_SAP_RESOLUTION_12 */
 231:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 232:.\Generated_Source\PSoC4/ADC_SAP.c ****     for(chNum = 0u; chNum < ADC_SAP_TOTAL_CHANNELS_NUM; chNum++)
 188              		.loc 1 232 0 discriminator 4
 189 009a 0023     		mov	r3, #0
 190 009c FB60     		str	r3, [r7, #12]
 191 009e 57E0     		b	.L8
 192              	.L15:
 233:.\Generated_Source\PSoC4/ADC_SAP.c ****     {
 234:.\Generated_Source\PSoC4/ADC_SAP.c ****         tmpRegVal = (ADC_SAP_channelsConfig[chNum] & ADC_SAP_CHANNEL_CONFIG_MASK);
 193              		.loc 1 234 0
 194 00a0 0022     		mov	r2, #0
 195 00a2 DC23     		mov	r3, #220
 196 00a4 9B01     		lsl	r3, r3, #6
 197 00a6 1340     		and	r3, r2
 198 00a8 7B60     		str	r3, [r7, #4]
 235:.\Generated_Source\PSoC4/ADC_SAP.c ****         #if(ADC_SAP_TOTAL_CHANNELS_NUM > 1u)
 236:.\Generated_Source\PSoC4/ADC_SAP.c ****             tmpRegVal |= ADC_SAP_InputsPlacement[chNum];
 237:.\Generated_Source\PSoC4/ADC_SAP.c ****         #endif /* End ADC_SAP_TOTAL_CHANNELS_NUM > 1u */
 238:.\Generated_Source\PSoC4/ADC_SAP.c ****         
 239:.\Generated_Source\PSoC4/ADC_SAP.c ****         
 240:.\Generated_Source\PSoC4/ADC_SAP.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:.\Generated_Source\PSoC4/ADC_SAP.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:.\Generated_Source\PSoC4/ADC_SAP.c ****         *  (0) and 8-bit (1) resolution.
 243:.\Generated_Source\PSoC4/ADC_SAP.c ****         */
 244:.\Generated_Source\PSoC4/ADC_SAP.c ****         #if((ADC_SAP_MAX_RESOLUTION != ADC_SAP_RESOLUTION_12) && \
 245:.\Generated_Source\PSoC4/ADC_SAP.c ****             (ADC_SAP_ALT_WOUNDING == ADC_SAP_WOUNDING_10BIT))
 246:.\Generated_Source\PSoC4/ADC_SAP.c ****             tmpRegVal &= (uint32)(~ADC_SAP_ALT_RESOLUTION_ON);
 247:.\Generated_Source\PSoC4/ADC_SAP.c ****         #endif /* ADC_SAP_MAX_RESOLUTION != ADC_SAP_RESOLUTION_12 */
 248:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 249:.\Generated_Source\PSoC4/ADC_SAP.c ****         #if(ADC_SAP_INJ_CHANNEL_ENABLED)
 250:.\Generated_Source\PSoC4/ADC_SAP.c ****         if(chNum < ADC_SAP_SEQUENCED_CHANNELS_NUM)
 251:.\Generated_Source\PSoC4/ADC_SAP.c ****         #endif /* ADC_SAP_INJ_CHANNEL_ENABLED */
 252:.\Generated_Source\PSoC4/ADC_SAP.c ****         {
 253:.\Generated_Source\PSoC4/ADC_SAP.c ****             CY_SET_REG32((reg32 *)(ADC_SAP_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 199              		.loc 1 253 0
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 9


 200 00aa FB68     		ldr	r3, [r7, #12]
 201 00ac 9B00     		lsl	r3, r3, #2
 202 00ae 3F4A     		ldr	r2, .L16+80
 203 00b0 9446     		mov	ip, r2
 204 00b2 6344     		add	r3, r3, ip
 205 00b4 7A68     		ldr	r2, [r7, #4]
 206 00b6 1A60     		str	r2, [r3]
 254:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 255:.\Generated_Source\PSoC4/ADC_SAP.c ****             if((ADC_SAP_channelsConfig[chNum] & ADC_SAP_IS_SATURATE_EN_MASK) != 0u)
 207              		.loc 1 255 0
 208 00b8 0022     		mov	r2, #0
 209 00ba 0123     		mov	r3, #1
 210 00bc 1340     		and	r3, r2
 211 00be 09D0     		beq	.L9
 256:.\Generated_Source\PSoC4/ADC_SAP.c ****             {
 257:.\Generated_Source\PSoC4/ADC_SAP.c ****                 ADC_SAP_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 212              		.loc 1 257 0
 213 00c0 354B     		ldr	r3, .L16+60
 214 00c2 354A     		ldr	r2, .L16+60
 215 00c4 1268     		ldr	r2, [r2]
 216 00c6 F968     		ldr	r1, [r7, #12]
 217 00c8 0120     		mov	r0, #1
 218 00ca 8840     		lsl	r0, r0, r1
 219 00cc 011C     		mov	r1, r0
 220 00ce 89B2     		uxth	r1, r1
 221 00d0 0A43     		orr	r2, r1
 222 00d2 1A60     		str	r2, [r3]
 223              	.L9:
 258:.\Generated_Source\PSoC4/ADC_SAP.c ****             }
 259:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 260:.\Generated_Source\PSoC4/ADC_SAP.c ****             if((ADC_SAP_channelsConfig[chNum] & ADC_SAP_IS_RANGE_CTRL_EN_MASK) != 0u)
 224              		.loc 1 260 0
 225 00d4 0022     		mov	r2, #0
 226 00d6 0223     		mov	r3, #2
 227 00d8 1340     		and	r3, r2
 228 00da 09D0     		beq	.L10
 261:.\Generated_Source\PSoC4/ADC_SAP.c ****             {
 262:.\Generated_Source\PSoC4/ADC_SAP.c ****                 ADC_SAP_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 229              		.loc 1 262 0
 230 00dc 2F4B     		ldr	r3, .L16+64
 231 00de 2F4A     		ldr	r2, .L16+64
 232 00e0 1268     		ldr	r2, [r2]
 233 00e2 F968     		ldr	r1, [r7, #12]
 234 00e4 0120     		mov	r0, #1
 235 00e6 8840     		lsl	r0, r0, r1
 236 00e8 011C     		mov	r1, r0
 237 00ea 89B2     		uxth	r1, r1
 238 00ec 0A43     		orr	r2, r1
 239 00ee 1A60     		str	r2, [r3]
 240              	.L10:
 263:.\Generated_Source\PSoC4/ADC_SAP.c ****             }
 264:.\Generated_Source\PSoC4/ADC_SAP.c ****         }
 265:.\Generated_Source\PSoC4/ADC_SAP.c ****         #if(ADC_SAP_INJ_CHANNEL_ENABLED)
 266:.\Generated_Source\PSoC4/ADC_SAP.c ****             else
 267:.\Generated_Source\PSoC4/ADC_SAP.c ****             {
 268:.\Generated_Source\PSoC4/ADC_SAP.c ****                 CY_SET_REG32(ADC_SAP_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_SAP_INJ_TAILGATING);
 269:.\Generated_Source\PSoC4/ADC_SAP.c **** 
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 10


 270:.\Generated_Source\PSoC4/ADC_SAP.c ****                 if((ADC_SAP_channelsConfig[chNum] & ADC_SAP_IS_SATURATE_EN_MASK) != 0u)
 271:.\Generated_Source\PSoC4/ADC_SAP.c ****                 {
 272:.\Generated_Source\PSoC4/ADC_SAP.c ****                     ADC_SAP_SAR_INTR_MASK_REG |= ADC_SAP_INJ_SATURATE_MASK;
 273:.\Generated_Source\PSoC4/ADC_SAP.c ****                 }
 274:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 275:.\Generated_Source\PSoC4/ADC_SAP.c ****                 if((ADC_SAP_channelsConfig[chNum] & ADC_SAP_IS_RANGE_CTRL_EN_MASK) != 0u)
 276:.\Generated_Source\PSoC4/ADC_SAP.c ****                 {
 277:.\Generated_Source\PSoC4/ADC_SAP.c ****                     ADC_SAP_SAR_INTR_MASK_REG |= ADC_SAP_INJ_RANGE_MASK;
 278:.\Generated_Source\PSoC4/ADC_SAP.c ****                 }
 279:.\Generated_Source\PSoC4/ADC_SAP.c ****             }
 280:.\Generated_Source\PSoC4/ADC_SAP.c ****         #endif /* ADC_SAP_INJ_CHANNEL_ENABLED */
 281:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 282:.\Generated_Source\PSoC4/ADC_SAP.c ****         if((ADC_SAP_channelsConfig[chNum] & ADC_SAP_ALT_RESOLUTION_ON) != 0u)
 241              		.loc 1 282 0
 242 00f0 0022     		mov	r2, #0
 243 00f2 8023     		mov	r3, #128
 244 00f4 9B00     		lsl	r3, r3, #2
 245 00f6 1340     		and	r3, r2
 246 00f8 03D0     		beq	.L11
 283:.\Generated_Source\PSoC4/ADC_SAP.c ****         {
 284:.\Generated_Source\PSoC4/ADC_SAP.c ****                counts = (int32)ADC_SAP_DEFAULT_MAX_WRK_ALT;
 247              		.loc 1 284 0
 248 00fa 8023     		mov	r3, #128
 249 00fc 5B00     		lsl	r3, r3, #1
 250 00fe BB60     		str	r3, [r7, #8]
 251 0100 02E0     		b	.L12
 252              	.L11:
 285:.\Generated_Source\PSoC4/ADC_SAP.c ****         }
 286:.\Generated_Source\PSoC4/ADC_SAP.c ****         else
 287:.\Generated_Source\PSoC4/ADC_SAP.c ****         {
 288:.\Generated_Source\PSoC4/ADC_SAP.c ****                counts = (int32)ADC_SAP_SAR_WRK_MAX_12BIT;
 253              		.loc 1 288 0
 254 0102 8023     		mov	r3, #128
 255 0104 5B01     		lsl	r3, r3, #5
 256 0106 BB60     		str	r3, [r7, #8]
 257              	.L12:
 289:.\Generated_Source\PSoC4/ADC_SAP.c ****         }
 290:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 291:.\Generated_Source\PSoC4/ADC_SAP.c ****         if((ADC_SAP_channelsConfig[chNum] & ADC_SAP_DIFFERENTIAL_EN) == 0u)
 258              		.loc 1 291 0
 259 0108 0022     		mov	r2, #0
 260 010a 8023     		mov	r3, #128
 261 010c 5B00     		lsl	r3, r3, #1
 262 010e 1340     		and	r3, r2
 263 0110 05D1     		bne	.L13
 292:.\Generated_Source\PSoC4/ADC_SAP.c ****         {
 293:.\Generated_Source\PSoC4/ADC_SAP.c ****             #if((ADC_SAP_DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAP__FSIGNED) && \
 294:.\Generated_Source\PSoC4/ADC_SAP.c ****                 (ADC_SAP_DEFAULT_NEG_INPUT_SEL == ADC_SAP__VREF))
 295:.\Generated_Source\PSoC4/ADC_SAP.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:.\Generated_Source\PSoC4/ADC_SAP.c ****                 ADC_SAP_offset[chNum] = (int16)(counts / -2);
 297:.\Generated_Source\PSoC4/ADC_SAP.c ****             #else
 298:.\Generated_Source\PSoC4/ADC_SAP.c ****                 ADC_SAP_offset[chNum] = 0;
 264              		.loc 1 298 0
 265 0112 274B     		ldr	r3, .L16+84
 266 0114 FA68     		ldr	r2, [r7, #12]
 267 0116 5200     		lsl	r2, r2, #1
 268 0118 0021     		mov	r1, #0
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 11


 269 011a D152     		strh	r1, [r2, r3]
 270 011c 04E0     		b	.L14
 271              	.L13:
 299:.\Generated_Source\PSoC4/ADC_SAP.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAP__FSIGNED */
 300:.\Generated_Source\PSoC4/ADC_SAP.c ****         }
 301:.\Generated_Source\PSoC4/ADC_SAP.c ****         else    /* Differential channel */
 302:.\Generated_Source\PSoC4/ADC_SAP.c ****         {
 303:.\Generated_Source\PSoC4/ADC_SAP.c ****             #if(ADC_SAP_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAP__FUNSIGNED)
 304:.\Generated_Source\PSoC4/ADC_SAP.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:.\Generated_Source\PSoC4/ADC_SAP.c ****                 ADC_SAP_offset[chNum] = (int16)(counts / 2);
 306:.\Generated_Source\PSoC4/ADC_SAP.c ****             #else
 307:.\Generated_Source\PSoC4/ADC_SAP.c ****                 ADC_SAP_offset[chNum] = 0;
 272              		.loc 1 307 0
 273 011e 244B     		ldr	r3, .L16+84
 274 0120 FA68     		ldr	r2, [r7, #12]
 275 0122 5200     		lsl	r2, r2, #1
 276 0124 0021     		mov	r1, #0
 277 0126 D152     		strh	r1, [r2, r3]
 278              	.L14:
 308:.\Generated_Source\PSoC4/ADC_SAP.c ****             #endif /* end ADC_SAP_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAP__FUNSIGNED */
 309:.\Generated_Source\PSoC4/ADC_SAP.c ****         }
 310:.\Generated_Source\PSoC4/ADC_SAP.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:.\Generated_Source\PSoC4/ADC_SAP.c ****         ADC_SAP_countsPer10Volt[chNum] = (int16)(((counts * ADC_SAP_10MV_COUNTS) +
 279              		.loc 1 311 0 discriminator 2
 280 0128 BB68     		ldr	r3, [r7, #8]
 281 012a 224A     		ldr	r2, .L16+88
 282 012c 5343     		mul	r3, r2
 283 012e 224A     		ldr	r2, .L16+92
 284 0130 9446     		mov	ip, r2
 285 0132 6344     		add	r3, r3, ip
 312:.\Generated_Source\PSoC4/ADC_SAP.c ****                             ADC_SAP_DEFAULT_VREF_MV_VALUE) / (ADC_SAP_DEFAULT_VREF_MV_VALUE * 2));
 286              		.loc 1 312 0 discriminator 2
 287 0134 181C     		mov	r0, r3
 288 0136 2149     		ldr	r1, .L16+96
 289 0138 FFF7FEFF 		bl	__aeabi_idiv
 290 013c 031C     		mov	r3, r0
 311:.\Generated_Source\PSoC4/ADC_SAP.c ****                             ADC_SAP_DEFAULT_VREF_MV_VALUE) / (ADC_SAP_DEFAULT_VREF_MV_VALUE * 2));
 291              		.loc 1 311 0 discriminator 2
 292 013e 9BB2     		uxth	r3, r3
 293 0140 19B2     		sxth	r1, r3
 294 0142 1F4B     		ldr	r3, .L16+100
 295 0144 FA68     		ldr	r2, [r7, #12]
 296 0146 9200     		lsl	r2, r2, #2
 297 0148 D150     		str	r1, [r2, r3]
 232:.\Generated_Source\PSoC4/ADC_SAP.c ****     {
 298              		.loc 1 232 0 discriminator 2
 299 014a FB68     		ldr	r3, [r7, #12]
 300 014c 0133     		add	r3, r3, #1
 301 014e FB60     		str	r3, [r7, #12]
 302              	.L8:
 232:.\Generated_Source\PSoC4/ADC_SAP.c ****     {
 303              		.loc 1 232 0 is_stmt 0 discriminator 1
 304 0150 FB68     		ldr	r3, [r7, #12]
 305 0152 002B     		cmp	r3, #0
 306 0154 A4D0     		beq	.L15
 313:.\Generated_Source\PSoC4/ADC_SAP.c ****     }
 314:.\Generated_Source\PSoC4/ADC_SAP.c **** }
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 12


 307              		.loc 1 314 0 is_stmt 1
 308 0156 BD46     		mov	sp, r7
 309 0158 04B0     		add	sp, sp, #16
 310              		@ sp needed
 311 015a 80BD     		pop	{r7, pc}
 312              	.L17:
 313              		.align	2
 314              	.L16:
 315 015c 00000000 		.word	ADC_SAP_ISR
 316 0160 20003A40 		.word	1077542944
 317 0164 80033A40 		.word	1077543808
 318 0168 70021050 		.word	1343226480
 319 016c 70020050 		.word	1342177904
 320 0170 00003A40 		.word	1077542912
 321 0174 04003A40 		.word	1077542916
 322 0178 9C000A80 		.word	-2146828132
 323 017c 18003A40 		.word	1077542936
 324 0180 0000FF07 		.word	134152192
 325 0184 1C003A40 		.word	1077542940
 326 0188 10003A40 		.word	1077542928
 327 018c 04000400 		.word	262148
 328 0190 14003A40 		.word	1077542932
 329 0194 00033A40 		.word	1077543680
 330 0198 28023A40 		.word	1077543464
 331 019c 38023A40 		.word	1077543480
 332 01a0 18023A40 		.word	1077543448
 333 01a4 30003A40 		.word	1077542960
 334 01a8 FFFFFFDF 		.word	-536870913
 335 01ac 80003A40 		.word	1077543040
 336 01b0 00000000 		.word	ADC_SAP_offset
 337 01b4 10270000 		.word	10000
 338 01b8 E40C0000 		.word	3300
 339 01bc C8190000 		.word	6600
 340 01c0 00000000 		.word	ADC_SAP_countsPer10Volt
 341              		.cfi_endproc
 342              	.LFE3:
 343              		.size	ADC_SAP_Init, .-ADC_SAP_Init
 344              		.section	.text.ADC_SAP_Enable,"ax",%progbits
 345              		.align	2
 346              		.global	ADC_SAP_Enable
 347              		.code	16
 348              		.thumb_func
 349              		.type	ADC_SAP_Enable, %function
 350              	ADC_SAP_Enable:
 351              	.LFB4:
 315:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 316:.\Generated_Source\PSoC4/ADC_SAP.c **** /*******************************************************************************
 317:.\Generated_Source\PSoC4/ADC_SAP.c **** * Function Name: ADC_SAR_1_Enable
 318:.\Generated_Source\PSoC4/ADC_SAP.c **** ********************************************************************************
 319:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 320:.\Generated_Source\PSoC4/ADC_SAP.c **** * Summary:
 321:.\Generated_Source\PSoC4/ADC_SAP.c **** *  Enables the clock and analog power for SAR ADC.
 322:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 323:.\Generated_Source\PSoC4/ADC_SAP.c **** * Parameters:
 324:.\Generated_Source\PSoC4/ADC_SAP.c **** *  None.
 325:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 326:.\Generated_Source\PSoC4/ADC_SAP.c **** * Return:
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 13


 327:.\Generated_Source\PSoC4/ADC_SAP.c **** *  None.
 328:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 329:.\Generated_Source\PSoC4/ADC_SAP.c **** *******************************************************************************/
 330:.\Generated_Source\PSoC4/ADC_SAP.c **** void ADC_SAP_Enable(void)
 331:.\Generated_Source\PSoC4/ADC_SAP.c **** {
 352              		.loc 1 331 0
 353              		.cfi_startproc
 354 0000 80B5     		push	{r7, lr}
 355              		.cfi_def_cfa_offset 8
 356              		.cfi_offset 7, -8
 357              		.cfi_offset 14, -4
 358 0002 00AF     		add	r7, sp, #0
 359              		.cfi_def_cfa_register 7
 332:.\Generated_Source\PSoC4/ADC_SAP.c ****     if (0u == (ADC_SAP_SAR_CTRL_REG & ADC_SAP_ENABLE))
 360              		.loc 1 332 0
 361 0004 0A4B     		ldr	r3, .L21
 362 0006 1B68     		ldr	r3, [r3]
 363 0008 002B     		cmp	r3, #0
 364 000a 0EDB     		blt	.L18
 333:.\Generated_Source\PSoC4/ADC_SAP.c ****     {
 334:.\Generated_Source\PSoC4/ADC_SAP.c ****         #if(ADC_SAP_CY_SAR_IP_VER != ADC_SAP_CY_SAR_IP_VER0)
 335:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 336:.\Generated_Source\PSoC4/ADC_SAP.c ****             while (0u != (ADC_SAP_SAR_STATUS_REG & ADC_SAP_STATUS_BUSY))
 365              		.loc 1 336 0
 366 000c C046     		mov	r8, r8
 367              	.L20:
 368              		.loc 1 336 0 is_stmt 0 discriminator 1
 369 000e 094B     		ldr	r3, .L21+4
 370 0010 1B68     		ldr	r3, [r3]
 371 0012 002B     		cmp	r3, #0
 372 0014 FBDB     		blt	.L20
 337:.\Generated_Source\PSoC4/ADC_SAP.c ****             {
 338:.\Generated_Source\PSoC4/ADC_SAP.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:.\Generated_Source\PSoC4/ADC_SAP.c ****             }
 340:.\Generated_Source\PSoC4/ADC_SAP.c ****         #endif /* (ADC_SAP_CY_SAR_IP_VER != ADC_SAP_CY_SAR_IP_VER0) */
 341:.\Generated_Source\PSoC4/ADC_SAP.c ****         
 342:.\Generated_Source\PSoC4/ADC_SAP.c ****         ADC_SAP_SAR_CTRL_REG |= ADC_SAP_ENABLE;
 373              		.loc 1 342 0 is_stmt 1
 374 0016 064B     		ldr	r3, .L21
 375 0018 054A     		ldr	r2, .L21
 376 001a 1268     		ldr	r2, [r2]
 377 001c 8021     		mov	r1, #128
 378 001e 0906     		lsl	r1, r1, #24
 379 0020 0A43     		orr	r2, r1
 380 0022 1A60     		str	r2, [r3]
 343:.\Generated_Source\PSoC4/ADC_SAP.c ****         
 344:.\Generated_Source\PSoC4/ADC_SAP.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:.\Generated_Source\PSoC4/ADC_SAP.c ****         CyDelayUs(ADC_SAP_10US_DELAY);         
 381              		.loc 1 345 0
 382 0024 0A20     		mov	r0, #10
 383 0026 FFF7FEFF 		bl	CyDelayUs
 384              	.L18:
 346:.\Generated_Source\PSoC4/ADC_SAP.c ****     }
 347:.\Generated_Source\PSoC4/ADC_SAP.c **** }
 385              		.loc 1 347 0
 386 002a BD46     		mov	sp, r7
 387              		@ sp needed
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 14


 388 002c 80BD     		pop	{r7, pc}
 389              	.L22:
 390 002e C046     		.align	2
 391              	.L21:
 392 0030 00003A40 		.word	1077542912
 393 0034 08023A40 		.word	1077543432
 394              		.cfi_endproc
 395              	.LFE4:
 396              		.size	ADC_SAP_Enable, .-ADC_SAP_Enable
 397              		.section	.text.ADC_SAP_Stop,"ax",%progbits
 398              		.align	2
 399              		.global	ADC_SAP_Stop
 400              		.code	16
 401              		.thumb_func
 402              		.type	ADC_SAP_Stop, %function
 403              	ADC_SAP_Stop:
 404              	.LFB5:
 348:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 349:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 350:.\Generated_Source\PSoC4/ADC_SAP.c **** /*******************************************************************************
 351:.\Generated_Source\PSoC4/ADC_SAP.c **** * Function Name: ADC_SAP_Stop
 352:.\Generated_Source\PSoC4/ADC_SAP.c **** ********************************************************************************
 353:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 354:.\Generated_Source\PSoC4/ADC_SAP.c **** * Summary:
 355:.\Generated_Source\PSoC4/ADC_SAP.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:.\Generated_Source\PSoC4/ADC_SAP.c **** *  mode.
 357:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 358:.\Generated_Source\PSoC4/ADC_SAP.c **** * Parameters:
 359:.\Generated_Source\PSoC4/ADC_SAP.c **** *  None.
 360:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 361:.\Generated_Source\PSoC4/ADC_SAP.c **** * Return:
 362:.\Generated_Source\PSoC4/ADC_SAP.c **** *  None.
 363:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 364:.\Generated_Source\PSoC4/ADC_SAP.c **** *******************************************************************************/
 365:.\Generated_Source\PSoC4/ADC_SAP.c **** void ADC_SAP_Stop(void)
 366:.\Generated_Source\PSoC4/ADC_SAP.c **** {
 405              		.loc 1 366 0
 406              		.cfi_startproc
 407 0000 80B5     		push	{r7, lr}
 408              		.cfi_def_cfa_offset 8
 409              		.cfi_offset 7, -8
 410              		.cfi_offset 14, -4
 411 0002 00AF     		add	r7, sp, #0
 412              		.cfi_def_cfa_register 7
 367:.\Generated_Source\PSoC4/ADC_SAP.c ****     ADC_SAP_SAR_CTRL_REG &= (uint32)~ADC_SAP_ENABLE;
 413              		.loc 1 367 0
 414 0004 034B     		ldr	r3, .L24
 415 0006 034A     		ldr	r2, .L24
 416 0008 1268     		ldr	r2, [r2]
 417 000a 5200     		lsl	r2, r2, #1
 418 000c 5208     		lsr	r2, r2, #1
 419 000e 1A60     		str	r2, [r3]
 368:.\Generated_Source\PSoC4/ADC_SAP.c **** }
 420              		.loc 1 368 0
 421 0010 BD46     		mov	sp, r7
 422              		@ sp needed
 423 0012 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 15


 424              	.L25:
 425              		.align	2
 426              	.L24:
 427 0014 00003A40 		.word	1077542912
 428              		.cfi_endproc
 429              	.LFE5:
 430              		.size	ADC_SAP_Stop, .-ADC_SAP_Stop
 431              		.section	.text.ADC_SAP_StartConvert,"ax",%progbits
 432              		.align	2
 433              		.global	ADC_SAP_StartConvert
 434              		.code	16
 435              		.thumb_func
 436              		.type	ADC_SAP_StartConvert, %function
 437              	ADC_SAP_StartConvert:
 438              	.LFB6:
 369:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 370:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 371:.\Generated_Source\PSoC4/ADC_SAP.c **** /*******************************************************************************
 372:.\Generated_Source\PSoC4/ADC_SAP.c **** * Function Name: ADC_SAP_StartConvert
 373:.\Generated_Source\PSoC4/ADC_SAP.c **** ********************************************************************************
 374:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 375:.\Generated_Source\PSoC4/ADC_SAP.c **** * Summary:
 376:.\Generated_Source\PSoC4/ADC_SAP.c **** *  Description:
 377:.\Generated_Source\PSoC4/ADC_SAP.c **** *  For free running mode, this API starts the conversion process and it
 378:.\Generated_Source\PSoC4/ADC_SAP.c **** *  runs continuously.
 379:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 380:.\Generated_Source\PSoC4/ADC_SAP.c **** *  In a triggered mode, this routine triggers every conversion by
 381:.\Generated_Source\PSoC4/ADC_SAP.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:.\Generated_Source\PSoC4/ADC_SAP.c **** *  every conversion has to start by this API.
 383:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 384:.\Generated_Source\PSoC4/ADC_SAP.c **** * Parameters:
 385:.\Generated_Source\PSoC4/ADC_SAP.c **** *  None.
 386:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 387:.\Generated_Source\PSoC4/ADC_SAP.c **** * Return:
 388:.\Generated_Source\PSoC4/ADC_SAP.c **** *  None.
 389:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 390:.\Generated_Source\PSoC4/ADC_SAP.c **** *******************************************************************************/
 391:.\Generated_Source\PSoC4/ADC_SAP.c **** void ADC_SAP_StartConvert(void)
 392:.\Generated_Source\PSoC4/ADC_SAP.c **** {
 439              		.loc 1 392 0
 440              		.cfi_startproc
 441 0000 80B5     		push	{r7, lr}
 442              		.cfi_def_cfa_offset 8
 443              		.cfi_offset 7, -8
 444              		.cfi_offset 14, -4
 445 0002 00AF     		add	r7, sp, #0
 446              		.cfi_def_cfa_register 7
 393:.\Generated_Source\PSoC4/ADC_SAP.c ****     #if(ADC_SAP_DEFAULT_SAMPLE_MODE_SEL == ADC_SAP__FREERUNNING)
 394:.\Generated_Source\PSoC4/ADC_SAP.c ****         ADC_SAP_SAR_SAMPLE_CTRL_REG |= ADC_SAP_CONTINUOUS_EN;
 395:.\Generated_Source\PSoC4/ADC_SAP.c ****     #else /* Firmware trigger */
 396:.\Generated_Source\PSoC4/ADC_SAP.c ****         ADC_SAP_SAR_START_CTRL_REG = ADC_SAP_FW_TRIGGER;
 447              		.loc 1 396 0
 448 0004 024B     		ldr	r3, .L27
 449 0006 0122     		mov	r2, #1
 450 0008 1A60     		str	r2, [r3]
 397:.\Generated_Source\PSoC4/ADC_SAP.c ****     #endif /* End ADC_SAP_DEFAULT_SAMPLE_MODE == ADC_SAP__FREERUNNING */
 398:.\Generated_Source\PSoC4/ADC_SAP.c **** 
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 16


 399:.\Generated_Source\PSoC4/ADC_SAP.c **** }
 451              		.loc 1 399 0
 452 000a BD46     		mov	sp, r7
 453              		@ sp needed
 454 000c 80BD     		pop	{r7, pc}
 455              	.L28:
 456 000e C046     		.align	2
 457              	.L27:
 458 0010 24003A40 		.word	1077542948
 459              		.cfi_endproc
 460              	.LFE6:
 461              		.size	ADC_SAP_StartConvert, .-ADC_SAP_StartConvert
 462              		.section	.text.ADC_SAP_StopConvert,"ax",%progbits
 463              		.align	2
 464              		.global	ADC_SAP_StopConvert
 465              		.code	16
 466              		.thumb_func
 467              		.type	ADC_SAP_StopConvert, %function
 468              	ADC_SAP_StopConvert:
 469              	.LFB7:
 400:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 401:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 402:.\Generated_Source\PSoC4/ADC_SAP.c **** /*******************************************************************************
 403:.\Generated_Source\PSoC4/ADC_SAP.c **** * Function Name: ADC_SAP_StopConvert
 404:.\Generated_Source\PSoC4/ADC_SAP.c **** ********************************************************************************
 405:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 406:.\Generated_Source\PSoC4/ADC_SAP.c **** * Summary:
 407:.\Generated_Source\PSoC4/ADC_SAP.c **** *  Forces the ADC to stop all conversions.
 408:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 409:.\Generated_Source\PSoC4/ADC_SAP.c **** * Parameters:
 410:.\Generated_Source\PSoC4/ADC_SAP.c **** *  None.
 411:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 412:.\Generated_Source\PSoC4/ADC_SAP.c **** * Return:
 413:.\Generated_Source\PSoC4/ADC_SAP.c **** *  None.
 414:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 415:.\Generated_Source\PSoC4/ADC_SAP.c **** *******************************************************************************/
 416:.\Generated_Source\PSoC4/ADC_SAP.c **** void ADC_SAP_StopConvert(void)
 417:.\Generated_Source\PSoC4/ADC_SAP.c **** {
 470              		.loc 1 417 0
 471              		.cfi_startproc
 472 0000 80B5     		push	{r7, lr}
 473              		.cfi_def_cfa_offset 8
 474              		.cfi_offset 7, -8
 475              		.cfi_offset 14, -4
 476 0002 00AF     		add	r7, sp, #0
 477              		.cfi_def_cfa_register 7
 418:.\Generated_Source\PSoC4/ADC_SAP.c ****     #if(ADC_SAP_DEFAULT_SAMPLE_MODE_SEL == ADC_SAP__FREERUNNING)
 419:.\Generated_Source\PSoC4/ADC_SAP.c ****         ADC_SAP_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_SAP_CONTINUOUS_EN);
 420:.\Generated_Source\PSoC4/ADC_SAP.c ****     #endif /* ADC_SAP_DEFAULT_SAMPLE_MODE == ADC_SAP__FREERUNNING */
 421:.\Generated_Source\PSoC4/ADC_SAP.c **** }
 478              		.loc 1 421 0
 479 0004 BD46     		mov	sp, r7
 480              		@ sp needed
 481 0006 80BD     		pop	{r7, pc}
 482              		.cfi_endproc
 483              	.LFE7:
 484              		.size	ADC_SAP_StopConvert, .-ADC_SAP_StopConvert
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 17


 485              		.section	.text.ADC_SAP_IsEndConversion,"ax",%progbits
 486              		.align	2
 487              		.global	ADC_SAP_IsEndConversion
 488              		.code	16
 489              		.thumb_func
 490              		.type	ADC_SAP_IsEndConversion, %function
 491              	ADC_SAP_IsEndConversion:
 492              	.LFB8:
 422:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 423:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 424:.\Generated_Source\PSoC4/ADC_SAP.c **** /*******************************************************************************
 425:.\Generated_Source\PSoC4/ADC_SAP.c **** * Function Name: ADC_SAP_IsEndConversion
 426:.\Generated_Source\PSoC4/ADC_SAP.c **** ********************************************************************************
 427:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 428:.\Generated_Source\PSoC4/ADC_SAP.c **** * Summary:
 429:.\Generated_Source\PSoC4/ADC_SAP.c **** *  Description: Checks for ADC end of conversion for the case one
 430:.\Generated_Source\PSoC4/ADC_SAP.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:.\Generated_Source\PSoC4/ADC_SAP.c **** *  as a software version of the EOC. This function provides the
 432:.\Generated_Source\PSoC4/ADC_SAP.c **** *  programmer with two options. In one mode this function
 433:.\Generated_Source\PSoC4/ADC_SAP.c **** *  immediately returns with the conversion status. In the other mode,
 434:.\Generated_Source\PSoC4/ADC_SAP.c **** *  the function does not return (blocking) until the conversion has
 435:.\Generated_Source\PSoC4/ADC_SAP.c **** *  completed.
 436:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 437:.\Generated_Source\PSoC4/ADC_SAP.c **** * Parameters:
 438:.\Generated_Source\PSoC4/ADC_SAP.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:.\Generated_Source\PSoC4/ADC_SAP.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:.\Generated_Source\PSoC4/ADC_SAP.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:.\Generated_Source\PSoC4/ADC_SAP.c **** *                              for injection channel
 442:.\Generated_Source\PSoC4/ADC_SAP.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:.\Generated_Source\PSoC4/ADC_SAP.c **** *                              channel conversion
 444:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 445:.\Generated_Source\PSoC4/ADC_SAP.c **** * Return:
 446:.\Generated_Source\PSoC4/ADC_SAP.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:.\Generated_Source\PSoC4/ADC_SAP.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 449:.\Generated_Source\PSoC4/ADC_SAP.c **** *******************************************************************************/
 450:.\Generated_Source\PSoC4/ADC_SAP.c **** uint32 ADC_SAP_IsEndConversion(uint32 retMode)
 451:.\Generated_Source\PSoC4/ADC_SAP.c **** {
 493              		.loc 1 451 0
 494              		.cfi_startproc
 495 0000 80B5     		push	{r7, lr}
 496              		.cfi_def_cfa_offset 8
 497              		.cfi_offset 7, -8
 498              		.cfi_offset 14, -4
 499 0002 84B0     		sub	sp, sp, #16
 500              		.cfi_def_cfa_offset 24
 501 0004 00AF     		add	r7, sp, #0
 502              		.cfi_def_cfa_register 7
 503 0006 7860     		str	r0, [r7, #4]
 452:.\Generated_Source\PSoC4/ADC_SAP.c ****     uint32 status = 0u;
 504              		.loc 1 452 0
 505 0008 0023     		mov	r3, #0
 506 000a FB60     		str	r3, [r7, #12]
 453:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 454:.\Generated_Source\PSoC4/ADC_SAP.c ****     if((retMode & (ADC_SAP_RETURN_STATUS | ADC_SAP_WAIT_FOR_RESULT)) != 0u)
 507              		.loc 1 454 0
 508 000c 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 18


 509 000e 0322     		mov	r2, #3
 510 0010 1340     		and	r3, r2
 511 0012 11D0     		beq	.L31
 512              	.L33:
 455:.\Generated_Source\PSoC4/ADC_SAP.c ****     {
 456:.\Generated_Source\PSoC4/ADC_SAP.c ****         do
 457:.\Generated_Source\PSoC4/ADC_SAP.c ****         {
 458:.\Generated_Source\PSoC4/ADC_SAP.c ****             status = ADC_SAP_SAR_INTR_REG & ADC_SAP_EOS_MASK;
 513              		.loc 1 458 0 discriminator 2
 514 0014 0B4B     		ldr	r3, .L35
 515 0016 1B68     		ldr	r3, [r3]
 516 0018 0122     		mov	r2, #1
 517 001a 1340     		and	r3, r2
 518 001c FB60     		str	r3, [r7, #12]
 459:.\Generated_Source\PSoC4/ADC_SAP.c ****         }while((status == 0u) && ((retMode & ADC_SAP_WAIT_FOR_RESULT) != 0u));
 519              		.loc 1 459 0 discriminator 2
 520 001e FB68     		ldr	r3, [r7, #12]
 521 0020 002B     		cmp	r3, #0
 522 0022 03D1     		bne	.L32
 523              		.loc 1 459 0 is_stmt 0 discriminator 1
 524 0024 7B68     		ldr	r3, [r7, #4]
 525 0026 0222     		mov	r2, #2
 526 0028 1340     		and	r3, r2
 527 002a F3D1     		bne	.L33
 528              	.L32:
 460:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 461:.\Generated_Source\PSoC4/ADC_SAP.c ****         if(status != 0u)
 529              		.loc 1 461 0 is_stmt 1
 530 002c FB68     		ldr	r3, [r7, #12]
 531 002e 002B     		cmp	r3, #0
 532 0030 02D0     		beq	.L31
 462:.\Generated_Source\PSoC4/ADC_SAP.c ****         {
 463:.\Generated_Source\PSoC4/ADC_SAP.c ****             /* Clear EOS bit */
 464:.\Generated_Source\PSoC4/ADC_SAP.c ****             ADC_SAP_SAR_INTR_REG = ADC_SAP_EOS_MASK;
 533              		.loc 1 464 0
 534 0032 044B     		ldr	r3, .L35
 535 0034 0122     		mov	r2, #1
 536 0036 1A60     		str	r2, [r3]
 537              	.L31:
 465:.\Generated_Source\PSoC4/ADC_SAP.c ****         }
 466:.\Generated_Source\PSoC4/ADC_SAP.c ****     }
 467:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 468:.\Generated_Source\PSoC4/ADC_SAP.c ****     #if(ADC_SAP_INJ_CHANNEL_ENABLED)
 469:.\Generated_Source\PSoC4/ADC_SAP.c ****         if((retMode & (ADC_SAP_RETURN_STATUS_INJ | ADC_SAP_WAIT_FOR_RESULT_INJ)) != 0u)
 470:.\Generated_Source\PSoC4/ADC_SAP.c ****         {
 471:.\Generated_Source\PSoC4/ADC_SAP.c ****             do
 472:.\Generated_Source\PSoC4/ADC_SAP.c ****             {
 473:.\Generated_Source\PSoC4/ADC_SAP.c ****                 status |= ADC_SAP_SAR_INTR_REG & ADC_SAP_INJ_EOC_MASK;
 474:.\Generated_Source\PSoC4/ADC_SAP.c ****             }while(((status & ADC_SAP_INJ_EOC_MASK) == 0u) &&
 475:.\Generated_Source\PSoC4/ADC_SAP.c ****                    ((retMode & ADC_SAP_WAIT_FOR_RESULT_INJ) != 0u));
 476:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 477:.\Generated_Source\PSoC4/ADC_SAP.c ****             if((status & ADC_SAP_INJ_EOC_MASK) != 0u)
 478:.\Generated_Source\PSoC4/ADC_SAP.c ****             {
 479:.\Generated_Source\PSoC4/ADC_SAP.c ****                 /* Clear Injection EOS bit */
 480:.\Generated_Source\PSoC4/ADC_SAP.c ****                 ADC_SAP_SAR_INTR_REG = ADC_SAP_INJ_EOC_MASK;
 481:.\Generated_Source\PSoC4/ADC_SAP.c ****             }
 482:.\Generated_Source\PSoC4/ADC_SAP.c ****         }
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 19


 483:.\Generated_Source\PSoC4/ADC_SAP.c ****     #endif /* ADC_SAP_INJ_CHANNEL_ENABLED */
 484:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 485:.\Generated_Source\PSoC4/ADC_SAP.c ****     return (status);
 538              		.loc 1 485 0
 539 0038 FB68     		ldr	r3, [r7, #12]
 486:.\Generated_Source\PSoC4/ADC_SAP.c **** }
 540              		.loc 1 486 0
 541 003a 181C     		mov	r0, r3
 542 003c BD46     		mov	sp, r7
 543 003e 04B0     		add	sp, sp, #16
 544              		@ sp needed
 545 0040 80BD     		pop	{r7, pc}
 546              	.L36:
 547 0042 C046     		.align	2
 548              	.L35:
 549 0044 10023A40 		.word	1077543440
 550              		.cfi_endproc
 551              	.LFE8:
 552              		.size	ADC_SAP_IsEndConversion, .-ADC_SAP_IsEndConversion
 553              		.section	.text.ADC_SAP_GetResult16,"ax",%progbits
 554              		.align	2
 555              		.global	ADC_SAP_GetResult16
 556              		.code	16
 557              		.thumb_func
 558              		.type	ADC_SAP_GetResult16, %function
 559              	ADC_SAP_GetResult16:
 560              	.LFB9:
 487:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 488:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 489:.\Generated_Source\PSoC4/ADC_SAP.c **** /*******************************************************************************
 490:.\Generated_Source\PSoC4/ADC_SAP.c **** * Function Name: ADC_SAP_GetResult16
 491:.\Generated_Source\PSoC4/ADC_SAP.c **** ********************************************************************************
 492:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 493:.\Generated_Source\PSoC4/ADC_SAP.c **** * Summary:
 494:.\Generated_Source\PSoC4/ADC_SAP.c **** *  Gets the data available in the SAR DATA register.
 495:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 496:.\Generated_Source\PSoC4/ADC_SAP.c **** * Parameters:
 497:.\Generated_Source\PSoC4/ADC_SAP.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:.\Generated_Source\PSoC4/ADC_SAP.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 500:.\Generated_Source\PSoC4/ADC_SAP.c **** * Return:
 501:.\Generated_Source\PSoC4/ADC_SAP.c **** *  Returns converted data as a signed 16-bit integer
 502:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 503:.\Generated_Source\PSoC4/ADC_SAP.c **** *******************************************************************************/
 504:.\Generated_Source\PSoC4/ADC_SAP.c **** int16 ADC_SAP_GetResult16(uint32 chan)
 505:.\Generated_Source\PSoC4/ADC_SAP.c **** {
 561              		.loc 1 505 0
 562              		.cfi_startproc
 563 0000 80B5     		push	{r7, lr}
 564              		.cfi_def_cfa_offset 8
 565              		.cfi_offset 7, -8
 566              		.cfi_offset 14, -4
 567 0002 84B0     		sub	sp, sp, #16
 568              		.cfi_def_cfa_offset 24
 569 0004 00AF     		add	r7, sp, #0
 570              		.cfi_def_cfa_register 7
 571 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 20


 506:.\Generated_Source\PSoC4/ADC_SAP.c ****     uint32 result;
 507:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 508:.\Generated_Source\PSoC4/ADC_SAP.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:.\Generated_Source\PSoC4/ADC_SAP.c ****     CYASSERT(chan < ADC_SAP_TOTAL_CHANNELS_NUM);
 572              		.loc 1 509 0
 573 0008 7B68     		ldr	r3, [r7, #4]
 574 000a 002B     		cmp	r3, #0
 575 000c 02D0     		beq	.L38
 576              		.loc 1 509 0 is_stmt 0 discriminator 1
 577 000e 0020     		mov	r0, #0
 578 0010 FFF7FEFF 		bl	CyHalt
 579              	.L38:
 510:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 511:.\Generated_Source\PSoC4/ADC_SAP.c ****     if(chan < ADC_SAP_SEQUENCED_CHANNELS_NUM)
 580              		.loc 1 511 0 is_stmt 1
 581 0014 7B68     		ldr	r3, [r7, #4]
 582 0016 002B     		cmp	r3, #0
 583 0018 09D1     		bne	.L39
 512:.\Generated_Source\PSoC4/ADC_SAP.c ****     {
 513:.\Generated_Source\PSoC4/ADC_SAP.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAP_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 584              		.loc 1 513 0
 585 001a 7B68     		ldr	r3, [r7, #4]
 586 001c 9B00     		lsl	r3, r3, #2
 587 001e 084A     		ldr	r2, .L42
 588 0020 9446     		mov	ip, r2
 589 0022 6344     		add	r3, r3, ip
 590 0024 1B68     		ldr	r3, [r3]
 591 0026 1B04     		lsl	r3, r3, #16
 592 0028 1B0C     		lsr	r3, r3, #16
 593 002a FB60     		str	r3, [r7, #12]
 594 002c 01E0     		b	.L40
 595              	.L39:
 514:.\Generated_Source\PSoC4/ADC_SAP.c ****                 ADC_SAP_RESULT_MASK;
 515:.\Generated_Source\PSoC4/ADC_SAP.c ****     }
 516:.\Generated_Source\PSoC4/ADC_SAP.c ****     else
 517:.\Generated_Source\PSoC4/ADC_SAP.c ****     {
 518:.\Generated_Source\PSoC4/ADC_SAP.c ****         #if(ADC_SAP_INJ_CHANNEL_ENABLED)
 519:.\Generated_Source\PSoC4/ADC_SAP.c ****             result = ADC_SAP_SAR_INJ_RESULT_REG & ADC_SAP_RESULT_MASK;
 520:.\Generated_Source\PSoC4/ADC_SAP.c ****         #else
 521:.\Generated_Source\PSoC4/ADC_SAP.c ****             result = 0u;
 596              		.loc 1 521 0
 597 002e 0023     		mov	r3, #0
 598 0030 FB60     		str	r3, [r7, #12]
 599              	.L40:
 522:.\Generated_Source\PSoC4/ADC_SAP.c ****         #endif /* ADC_SAP_INJ_CHANNEL_ENABLED */
 523:.\Generated_Source\PSoC4/ADC_SAP.c ****     }
 524:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 525:.\Generated_Source\PSoC4/ADC_SAP.c ****     return ( (int16)result );
 600              		.loc 1 525 0
 601 0032 FB68     		ldr	r3, [r7, #12]
 602 0034 9BB2     		uxth	r3, r3
 603 0036 1BB2     		sxth	r3, r3
 526:.\Generated_Source\PSoC4/ADC_SAP.c **** }
 604              		.loc 1 526 0
 605 0038 181C     		mov	r0, r3
 606 003a BD46     		mov	sp, r7
 607 003c 04B0     		add	sp, sp, #16
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 21


 608              		@ sp needed
 609 003e 80BD     		pop	{r7, pc}
 610              	.L43:
 611              		.align	2
 612              	.L42:
 613 0040 80013A40 		.word	1077543296
 614              		.cfi_endproc
 615              	.LFE9:
 616              		.size	ADC_SAP_GetResult16, .-ADC_SAP_GetResult16
 617              		.section	.text.ADC_SAP_SetChanMask,"ax",%progbits
 618              		.align	2
 619              		.global	ADC_SAP_SetChanMask
 620              		.code	16
 621              		.thumb_func
 622              		.type	ADC_SAP_SetChanMask, %function
 623              	ADC_SAP_SetChanMask:
 624              	.LFB10:
 527:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 528:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 529:.\Generated_Source\PSoC4/ADC_SAP.c **** /*******************************************************************************
 530:.\Generated_Source\PSoC4/ADC_SAP.c **** * Function Name: ADC_SAP_SetChanMask
 531:.\Generated_Source\PSoC4/ADC_SAP.c **** ********************************************************************************
 532:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 533:.\Generated_Source\PSoC4/ADC_SAP.c **** * Summary:
 534:.\Generated_Source\PSoC4/ADC_SAP.c **** *  Sets the channel enable mask.
 535:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 536:.\Generated_Source\PSoC4/ADC_SAP.c **** * Parameters:
 537:.\Generated_Source\PSoC4/ADC_SAP.c **** *  mask: Sets which channels that will be
 538:.\Generated_Source\PSoC4/ADC_SAP.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:.\Generated_Source\PSoC4/ADC_SAP.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:.\Generated_Source\PSoC4/ADC_SAP.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:.\Generated_Source\PSoC4/ADC_SAP.c **** *  This API will not enable the injection channel.
 542:.\Generated_Source\PSoC4/ADC_SAP.c **** *  Examples: If the component is setup to sequence through 8
 543:.\Generated_Source\PSoC4/ADC_SAP.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 545:.\Generated_Source\PSoC4/ADC_SAP.c **** * Return:
 546:.\Generated_Source\PSoC4/ADC_SAP.c **** *  None.
 547:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 548:.\Generated_Source\PSoC4/ADC_SAP.c **** *******************************************************************************/
 549:.\Generated_Source\PSoC4/ADC_SAP.c **** void ADC_SAP_SetChanMask(uint32 mask)
 550:.\Generated_Source\PSoC4/ADC_SAP.c **** {
 625              		.loc 1 550 0
 626              		.cfi_startproc
 627 0000 80B5     		push	{r7, lr}
 628              		.cfi_def_cfa_offset 8
 629              		.cfi_offset 7, -8
 630              		.cfi_offset 14, -4
 631 0002 82B0     		sub	sp, sp, #8
 632              		.cfi_def_cfa_offset 16
 633 0004 00AF     		add	r7, sp, #0
 634              		.cfi_def_cfa_register 7
 635 0006 7860     		str	r0, [r7, #4]
 551:.\Generated_Source\PSoC4/ADC_SAP.c ****     ADC_SAP_SAR_CHAN_EN_REG = mask & ADC_SAP_MAX_CHANNELS_EN_MASK;
 636              		.loc 1 551 0
 637 0008 034B     		ldr	r3, .L45
 638 000a 7A68     		ldr	r2, [r7, #4]
 639 000c 0121     		mov	r1, #1
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 22


 640 000e 0A40     		and	r2, r1
 641 0010 1A60     		str	r2, [r3]
 552:.\Generated_Source\PSoC4/ADC_SAP.c **** }
 642              		.loc 1 552 0
 643 0012 BD46     		mov	sp, r7
 644 0014 02B0     		add	sp, sp, #8
 645              		@ sp needed
 646 0016 80BD     		pop	{r7, pc}
 647              	.L46:
 648              		.align	2
 649              	.L45:
 650 0018 20003A40 		.word	1077542944
 651              		.cfi_endproc
 652              	.LFE10:
 653              		.size	ADC_SAP_SetChanMask, .-ADC_SAP_SetChanMask
 654              		.section	.text.ADC_SAP_SetLowLimit,"ax",%progbits
 655              		.align	2
 656              		.global	ADC_SAP_SetLowLimit
 657              		.code	16
 658              		.thumb_func
 659              		.type	ADC_SAP_SetLowLimit, %function
 660              	ADC_SAP_SetLowLimit:
 661              	.LFB11:
 553:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 554:.\Generated_Source\PSoC4/ADC_SAP.c **** #if(ADC_SAP_INJ_CHANNEL_ENABLED)
 555:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 556:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 557:.\Generated_Source\PSoC4/ADC_SAP.c ****     /*******************************************************************************
 558:.\Generated_Source\PSoC4/ADC_SAP.c ****     * Function Name: ADC_SAP_EnableInjection
 559:.\Generated_Source\PSoC4/ADC_SAP.c ****     ********************************************************************************
 560:.\Generated_Source\PSoC4/ADC_SAP.c ****     *
 561:.\Generated_Source\PSoC4/ADC_SAP.c ****     * Summary:
 562:.\Generated_Source\PSoC4/ADC_SAP.c ****     *  Enables the injection channel for the next scan only.
 563:.\Generated_Source\PSoC4/ADC_SAP.c ****     *
 564:.\Generated_Source\PSoC4/ADC_SAP.c ****     * Parameters:
 565:.\Generated_Source\PSoC4/ADC_SAP.c ****     *  None.
 566:.\Generated_Source\PSoC4/ADC_SAP.c ****     *
 567:.\Generated_Source\PSoC4/ADC_SAP.c ****     * Return:
 568:.\Generated_Source\PSoC4/ADC_SAP.c ****     *  None.
 569:.\Generated_Source\PSoC4/ADC_SAP.c ****     *
 570:.\Generated_Source\PSoC4/ADC_SAP.c ****     *******************************************************************************/
 571:.\Generated_Source\PSoC4/ADC_SAP.c ****     void ADC_SAP_EnableInjection(void)
 572:.\Generated_Source\PSoC4/ADC_SAP.c ****     {
 573:.\Generated_Source\PSoC4/ADC_SAP.c ****         ADC_SAP_SAR_INJ_CHAN_CONFIG_REG |= ADC_SAP_INJ_CHAN_EN;
 574:.\Generated_Source\PSoC4/ADC_SAP.c ****     }
 575:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 576:.\Generated_Source\PSoC4/ADC_SAP.c **** #endif /* ADC_SAP_INJ_CHANNEL_ENABLED */
 577:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 578:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 579:.\Generated_Source\PSoC4/ADC_SAP.c **** /*******************************************************************************
 580:.\Generated_Source\PSoC4/ADC_SAP.c **** * Function Name: ADC_SAP_SetLowLimit
 581:.\Generated_Source\PSoC4/ADC_SAP.c **** ********************************************************************************
 582:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 583:.\Generated_Source\PSoC4/ADC_SAP.c **** * Summary:
 584:.\Generated_Source\PSoC4/ADC_SAP.c **** *  Sets the low limit parameter for a limit condition.
 585:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 586:.\Generated_Source\PSoC4/ADC_SAP.c **** * Parameters:
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 23


 587:.\Generated_Source\PSoC4/ADC_SAP.c **** *  lowLimit: The low limit for a limit condition.
 588:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 589:.\Generated_Source\PSoC4/ADC_SAP.c **** * Return:
 590:.\Generated_Source\PSoC4/ADC_SAP.c **** *  None.
 591:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 592:.\Generated_Source\PSoC4/ADC_SAP.c **** *******************************************************************************/
 593:.\Generated_Source\PSoC4/ADC_SAP.c **** void ADC_SAP_SetLowLimit(uint32 lowLimit)
 594:.\Generated_Source\PSoC4/ADC_SAP.c **** {
 662              		.loc 1 594 0
 663              		.cfi_startproc
 664 0000 80B5     		push	{r7, lr}
 665              		.cfi_def_cfa_offset 8
 666              		.cfi_offset 7, -8
 667              		.cfi_offset 14, -4
 668 0002 82B0     		sub	sp, sp, #8
 669              		.cfi_def_cfa_offset 16
 670 0004 00AF     		add	r7, sp, #0
 671              		.cfi_def_cfa_register 7
 672 0006 7860     		str	r0, [r7, #4]
 595:.\Generated_Source\PSoC4/ADC_SAP.c ****     ADC_SAP_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAP_RANGE_LOW_MASK);
 673              		.loc 1 595 0
 674 0008 084B     		ldr	r3, .L48
 675 000a 084A     		ldr	r2, .L48
 676 000c 1268     		ldr	r2, [r2]
 677 000e 120C     		lsr	r2, r2, #16
 678 0010 1204     		lsl	r2, r2, #16
 679 0012 1A60     		str	r2, [r3]
 596:.\Generated_Source\PSoC4/ADC_SAP.c ****     ADC_SAP_SAR_RANGE_THRES_REG |= lowLimit & ADC_SAP_RANGE_LOW_MASK;
 680              		.loc 1 596 0
 681 0014 054B     		ldr	r3, .L48
 682 0016 054A     		ldr	r2, .L48
 683 0018 1168     		ldr	r1, [r2]
 684 001a 7A68     		ldr	r2, [r7, #4]
 685 001c 1204     		lsl	r2, r2, #16
 686 001e 120C     		lsr	r2, r2, #16
 687 0020 0A43     		orr	r2, r1
 688 0022 1A60     		str	r2, [r3]
 597:.\Generated_Source\PSoC4/ADC_SAP.c **** }
 689              		.loc 1 597 0
 690 0024 BD46     		mov	sp, r7
 691 0026 02B0     		add	sp, sp, #8
 692              		@ sp needed
 693 0028 80BD     		pop	{r7, pc}
 694              	.L49:
 695 002a C046     		.align	2
 696              	.L48:
 697 002c 18003A40 		.word	1077542936
 698              		.cfi_endproc
 699              	.LFE11:
 700              		.size	ADC_SAP_SetLowLimit, .-ADC_SAP_SetLowLimit
 701              		.section	.text.ADC_SAP_SetHighLimit,"ax",%progbits
 702              		.align	2
 703              		.global	ADC_SAP_SetHighLimit
 704              		.code	16
 705              		.thumb_func
 706              		.type	ADC_SAP_SetHighLimit, %function
 707              	ADC_SAP_SetHighLimit:
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 24


 708              	.LFB12:
 598:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 599:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 600:.\Generated_Source\PSoC4/ADC_SAP.c **** /*******************************************************************************
 601:.\Generated_Source\PSoC4/ADC_SAP.c **** * Function Name: ADC_SAP_SetHighLimit
 602:.\Generated_Source\PSoC4/ADC_SAP.c **** ********************************************************************************
 603:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 604:.\Generated_Source\PSoC4/ADC_SAP.c **** * Summary:
 605:.\Generated_Source\PSoC4/ADC_SAP.c **** *  Sets the low limit parameter for a limit condition.
 606:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 607:.\Generated_Source\PSoC4/ADC_SAP.c **** * Parameters:
 608:.\Generated_Source\PSoC4/ADC_SAP.c **** *  highLimit: The high limit for a limit condition.
 609:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 610:.\Generated_Source\PSoC4/ADC_SAP.c **** * Return:
 611:.\Generated_Source\PSoC4/ADC_SAP.c **** *  None.
 612:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 613:.\Generated_Source\PSoC4/ADC_SAP.c **** *******************************************************************************/
 614:.\Generated_Source\PSoC4/ADC_SAP.c **** void ADC_SAP_SetHighLimit(uint32 highLimit)
 615:.\Generated_Source\PSoC4/ADC_SAP.c **** {
 709              		.loc 1 615 0
 710              		.cfi_startproc
 711 0000 80B5     		push	{r7, lr}
 712              		.cfi_def_cfa_offset 8
 713              		.cfi_offset 7, -8
 714              		.cfi_offset 14, -4
 715 0002 82B0     		sub	sp, sp, #8
 716              		.cfi_def_cfa_offset 16
 717 0004 00AF     		add	r7, sp, #0
 718              		.cfi_def_cfa_register 7
 719 0006 7860     		str	r0, [r7, #4]
 616:.\Generated_Source\PSoC4/ADC_SAP.c ****     ADC_SAP_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAP_RANGE_HIGH_MASK);
 720              		.loc 1 616 0
 721 0008 074B     		ldr	r3, .L51
 722 000a 074A     		ldr	r2, .L51
 723 000c 1268     		ldr	r2, [r2]
 724 000e 1204     		lsl	r2, r2, #16
 725 0010 120C     		lsr	r2, r2, #16
 726 0012 1A60     		str	r2, [r3]
 617:.\Generated_Source\PSoC4/ADC_SAP.c ****     ADC_SAP_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_SAP_RANGE_HIGH_OFFSET);
 727              		.loc 1 617 0
 728 0014 044B     		ldr	r3, .L51
 729 0016 044A     		ldr	r2, .L51
 730 0018 1168     		ldr	r1, [r2]
 731 001a 7A68     		ldr	r2, [r7, #4]
 732 001c 1204     		lsl	r2, r2, #16
 733 001e 0A43     		orr	r2, r1
 734 0020 1A60     		str	r2, [r3]
 618:.\Generated_Source\PSoC4/ADC_SAP.c **** }
 735              		.loc 1 618 0
 736 0022 BD46     		mov	sp, r7
 737 0024 02B0     		add	sp, sp, #8
 738              		@ sp needed
 739 0026 80BD     		pop	{r7, pc}
 740              	.L52:
 741              		.align	2
 742              	.L51:
 743 0028 18003A40 		.word	1077542936
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 25


 744              		.cfi_endproc
 745              	.LFE12:
 746              		.size	ADC_SAP_SetHighLimit, .-ADC_SAP_SetHighLimit
 747              		.section	.text.ADC_SAP_SetLimitMask,"ax",%progbits
 748              		.align	2
 749              		.global	ADC_SAP_SetLimitMask
 750              		.code	16
 751              		.thumb_func
 752              		.type	ADC_SAP_SetLimitMask, %function
 753              	ADC_SAP_SetLimitMask:
 754              	.LFB13:
 619:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 620:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 621:.\Generated_Source\PSoC4/ADC_SAP.c **** /*******************************************************************************
 622:.\Generated_Source\PSoC4/ADC_SAP.c **** * Function Name: ADC_SAP_SetLimitMask
 623:.\Generated_Source\PSoC4/ADC_SAP.c **** ********************************************************************************
 624:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 625:.\Generated_Source\PSoC4/ADC_SAP.c **** * Summary:
 626:.\Generated_Source\PSoC4/ADC_SAP.c **** *  Sets the channel limit condition mask.
 627:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 628:.\Generated_Source\PSoC4/ADC_SAP.c **** * Parameters:
 629:.\Generated_Source\PSoC4/ADC_SAP.c **** *  mask: Sets which channels that may cause a
 630:.\Generated_Source\PSoC4/ADC_SAP.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:.\Generated_Source\PSoC4/ADC_SAP.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:.\Generated_Source\PSoC4/ADC_SAP.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 634:.\Generated_Source\PSoC4/ADC_SAP.c **** * Return:
 635:.\Generated_Source\PSoC4/ADC_SAP.c **** *  None.
 636:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 637:.\Generated_Source\PSoC4/ADC_SAP.c **** *******************************************************************************/
 638:.\Generated_Source\PSoC4/ADC_SAP.c **** void ADC_SAP_SetLimitMask(uint32 mask)
 639:.\Generated_Source\PSoC4/ADC_SAP.c **** {
 755              		.loc 1 639 0
 756              		.cfi_startproc
 757 0000 80B5     		push	{r7, lr}
 758              		.cfi_def_cfa_offset 8
 759              		.cfi_offset 7, -8
 760              		.cfi_offset 14, -4
 761 0002 82B0     		sub	sp, sp, #8
 762              		.cfi_def_cfa_offset 16
 763 0004 00AF     		add	r7, sp, #0
 764              		.cfi_def_cfa_register 7
 765 0006 7860     		str	r0, [r7, #4]
 640:.\Generated_Source\PSoC4/ADC_SAP.c ****     ADC_SAP_SAR_RANGE_INTR_MASK_REG = mask & ADC_SAP_MAX_CHANNELS_EN_MASK;
 766              		.loc 1 640 0
 767 0008 034B     		ldr	r3, .L54
 768 000a 7A68     		ldr	r2, [r7, #4]
 769 000c 0121     		mov	r1, #1
 770 000e 0A40     		and	r2, r1
 771 0010 1A60     		str	r2, [r3]
 641:.\Generated_Source\PSoC4/ADC_SAP.c **** }
 772              		.loc 1 641 0
 773 0012 BD46     		mov	sp, r7
 774 0014 02B0     		add	sp, sp, #8
 775              		@ sp needed
 776 0016 80BD     		pop	{r7, pc}
 777              	.L55:
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 26


 778              		.align	2
 779              	.L54:
 780 0018 38023A40 		.word	1077543480
 781              		.cfi_endproc
 782              	.LFE13:
 783              		.size	ADC_SAP_SetLimitMask, .-ADC_SAP_SetLimitMask
 784              		.section	.text.ADC_SAP_SetSatMask,"ax",%progbits
 785              		.align	2
 786              		.global	ADC_SAP_SetSatMask
 787              		.code	16
 788              		.thumb_func
 789              		.type	ADC_SAP_SetSatMask, %function
 790              	ADC_SAP_SetSatMask:
 791              	.LFB14:
 642:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 643:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 644:.\Generated_Source\PSoC4/ADC_SAP.c **** /*******************************************************************************
 645:.\Generated_Source\PSoC4/ADC_SAP.c **** * Function Name: ADC_SAP_SetSatMask
 646:.\Generated_Source\PSoC4/ADC_SAP.c **** ********************************************************************************
 647:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 648:.\Generated_Source\PSoC4/ADC_SAP.c **** * Summary:
 649:.\Generated_Source\PSoC4/ADC_SAP.c **** *  Sets the channel saturation event mask.
 650:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 651:.\Generated_Source\PSoC4/ADC_SAP.c **** * Parameters:
 652:.\Generated_Source\PSoC4/ADC_SAP.c **** *  mask: Sets which channels that may cause a
 653:.\Generated_Source\PSoC4/ADC_SAP.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:.\Generated_Source\PSoC4/ADC_SAP.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:.\Generated_Source\PSoC4/ADC_SAP.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 657:.\Generated_Source\PSoC4/ADC_SAP.c **** * Return:
 658:.\Generated_Source\PSoC4/ADC_SAP.c **** *  None.
 659:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 660:.\Generated_Source\PSoC4/ADC_SAP.c **** *******************************************************************************/
 661:.\Generated_Source\PSoC4/ADC_SAP.c **** void ADC_SAP_SetSatMask(uint32 mask)
 662:.\Generated_Source\PSoC4/ADC_SAP.c **** {
 792              		.loc 1 662 0
 793              		.cfi_startproc
 794 0000 80B5     		push	{r7, lr}
 795              		.cfi_def_cfa_offset 8
 796              		.cfi_offset 7, -8
 797              		.cfi_offset 14, -4
 798 0002 82B0     		sub	sp, sp, #8
 799              		.cfi_def_cfa_offset 16
 800 0004 00AF     		add	r7, sp, #0
 801              		.cfi_def_cfa_register 7
 802 0006 7860     		str	r0, [r7, #4]
 663:.\Generated_Source\PSoC4/ADC_SAP.c ****     ADC_SAP_SAR_SATURATE_INTR_MASK_REG = mask & ADC_SAP_MAX_CHANNELS_EN_MASK;
 803              		.loc 1 663 0
 804 0008 034B     		ldr	r3, .L57
 805 000a 7A68     		ldr	r2, [r7, #4]
 806 000c 0121     		mov	r1, #1
 807 000e 0A40     		and	r2, r1
 808 0010 1A60     		str	r2, [r3]
 664:.\Generated_Source\PSoC4/ADC_SAP.c **** }
 809              		.loc 1 664 0
 810 0012 BD46     		mov	sp, r7
 811 0014 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 27


 812              		@ sp needed
 813 0016 80BD     		pop	{r7, pc}
 814              	.L58:
 815              		.align	2
 816              	.L57:
 817 0018 28023A40 		.word	1077543464
 818              		.cfi_endproc
 819              	.LFE14:
 820              		.size	ADC_SAP_SetSatMask, .-ADC_SAP_SetSatMask
 821              		.section	.text.ADC_SAP_SetOffset,"ax",%progbits
 822              		.align	2
 823              		.global	ADC_SAP_SetOffset
 824              		.code	16
 825              		.thumb_func
 826              		.type	ADC_SAP_SetOffset, %function
 827              	ADC_SAP_SetOffset:
 828              	.LFB15:
 665:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 666:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 667:.\Generated_Source\PSoC4/ADC_SAP.c **** /*******************************************************************************
 668:.\Generated_Source\PSoC4/ADC_SAP.c **** * Function Name: ADC_SAP_SetOffset
 669:.\Generated_Source\PSoC4/ADC_SAP.c **** ********************************************************************************
 670:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 671:.\Generated_Source\PSoC4/ADC_SAP.c **** * Summary:
 672:.\Generated_Source\PSoC4/ADC_SAP.c **** *   Description: Sets the ADC offset which is used by the functions
 673:.\Generated_Source\PSoC4/ADC_SAP.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:.\Generated_Source\PSoC4/ADC_SAP.c **** *   to substract the offset from the given reading
 675:.\Generated_Source\PSoC4/ADC_SAP.c **** *   before calculating the voltage conversion.
 676:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 677:.\Generated_Source\PSoC4/ADC_SAP.c **** * Parameters:
 678:.\Generated_Source\PSoC4/ADC_SAP.c **** *  chan: ADC channel number.
 679:.\Generated_Source\PSoC4/ADC_SAP.c **** *  offset: This value is a measured value when the
 680:.\Generated_Source\PSoC4/ADC_SAP.c **** *          inputs are shorted or connected to the same input voltage.
 681:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 682:.\Generated_Source\PSoC4/ADC_SAP.c **** * Return:
 683:.\Generated_Source\PSoC4/ADC_SAP.c **** *  None.
 684:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 685:.\Generated_Source\PSoC4/ADC_SAP.c **** * Global variables:
 686:.\Generated_Source\PSoC4/ADC_SAP.c **** *  ADC_SAP_Offset:  Modified to set the user provided offset.
 687:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 688:.\Generated_Source\PSoC4/ADC_SAP.c **** *******************************************************************************/
 689:.\Generated_Source\PSoC4/ADC_SAP.c **** void ADC_SAP_SetOffset(uint32 chan, int16 offset)
 690:.\Generated_Source\PSoC4/ADC_SAP.c **** {
 829              		.loc 1 690 0
 830              		.cfi_startproc
 831 0000 80B5     		push	{r7, lr}
 832              		.cfi_def_cfa_offset 8
 833              		.cfi_offset 7, -8
 834              		.cfi_offset 14, -4
 835 0002 82B0     		sub	sp, sp, #8
 836              		.cfi_def_cfa_offset 16
 837 0004 00AF     		add	r7, sp, #0
 838              		.cfi_def_cfa_register 7
 839 0006 7860     		str	r0, [r7, #4]
 840 0008 0A1C     		mov	r2, r1
 841 000a BB1C     		add	r3, r7, #2
 842 000c 1A80     		strh	r2, [r3]
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 28


 691:.\Generated_Source\PSoC4/ADC_SAP.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:.\Generated_Source\PSoC4/ADC_SAP.c ****     CYASSERT(chan < ADC_SAP_TOTAL_CHANNELS_NUM);
 843              		.loc 1 692 0
 844 000e 7B68     		ldr	r3, [r7, #4]
 845 0010 002B     		cmp	r3, #0
 846 0012 02D0     		beq	.L60
 847              		.loc 1 692 0 is_stmt 0 discriminator 1
 848 0014 0020     		mov	r0, #0
 849 0016 FFF7FEFF 		bl	CyHalt
 850              	.L60:
 693:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 694:.\Generated_Source\PSoC4/ADC_SAP.c ****     ADC_SAP_offset[chan] = offset;
 851              		.loc 1 694 0 is_stmt 1
 852 001a 044B     		ldr	r3, .L61
 853 001c 7A68     		ldr	r2, [r7, #4]
 854 001e 5200     		lsl	r2, r2, #1
 855 0020 B91C     		add	r1, r7, #2
 856 0022 0988     		ldrh	r1, [r1]
 857 0024 D152     		strh	r1, [r2, r3]
 695:.\Generated_Source\PSoC4/ADC_SAP.c **** }
 858              		.loc 1 695 0
 859 0026 BD46     		mov	sp, r7
 860 0028 02B0     		add	sp, sp, #8
 861              		@ sp needed
 862 002a 80BD     		pop	{r7, pc}
 863              	.L62:
 864              		.align	2
 865              	.L61:
 866 002c 00000000 		.word	ADC_SAP_offset
 867              		.cfi_endproc
 868              	.LFE15:
 869              		.size	ADC_SAP_SetOffset, .-ADC_SAP_SetOffset
 870              		.section	.text.ADC_SAP_SetGain,"ax",%progbits
 871              		.align	2
 872              		.global	ADC_SAP_SetGain
 873              		.code	16
 874              		.thumb_func
 875              		.type	ADC_SAP_SetGain, %function
 876              	ADC_SAP_SetGain:
 877              	.LFB16:
 696:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 697:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 698:.\Generated_Source\PSoC4/ADC_SAP.c **** /*******************************************************************************
 699:.\Generated_Source\PSoC4/ADC_SAP.c **** * Function Name: ADC_SAP_SetGain
 700:.\Generated_Source\PSoC4/ADC_SAP.c **** ********************************************************************************
 701:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 702:.\Generated_Source\PSoC4/ADC_SAP.c **** * Summary:
 703:.\Generated_Source\PSoC4/ADC_SAP.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:.\Generated_Source\PSoC4/ADC_SAP.c **** *  conversion functions below. This value is set by default by the
 705:.\Generated_Source\PSoC4/ADC_SAP.c **** *  reference and input range settings. It should only be used to further
 706:.\Generated_Source\PSoC4/ADC_SAP.c **** *  calibrate the ADC with a known input or if an external reference is
 707:.\Generated_Source\PSoC4/ADC_SAP.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:.\Generated_Source\PSoC4/ADC_SAP.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:.\Generated_Source\PSoC4/ADC_SAP.c **** *  conversion between ADC counts and voltage.
 710:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 711:.\Generated_Source\PSoC4/ADC_SAP.c **** * Parameters:
 712:.\Generated_Source\PSoC4/ADC_SAP.c **** *  chan: ADC channel number.
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 29


 713:.\Generated_Source\PSoC4/ADC_SAP.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 715:.\Generated_Source\PSoC4/ADC_SAP.c **** * Return:
 716:.\Generated_Source\PSoC4/ADC_SAP.c **** *  None.
 717:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 718:.\Generated_Source\PSoC4/ADC_SAP.c **** * Global variables:
 719:.\Generated_Source\PSoC4/ADC_SAP.c **** *  ADC_SAP_CountsPer10Volt:  modified to set the ADC gain in counts
 720:.\Generated_Source\PSoC4/ADC_SAP.c **** *   per 10 volt.
 721:.\Generated_Source\PSoC4/ADC_SAP.c **** *
 722:.\Generated_Source\PSoC4/ADC_SAP.c **** *******************************************************************************/
 723:.\Generated_Source\PSoC4/ADC_SAP.c **** void ADC_SAP_SetGain(uint32 chan, int32 adcGain)
 724:.\Generated_Source\PSoC4/ADC_SAP.c **** {
 878              		.loc 1 724 0
 879              		.cfi_startproc
 880 0000 80B5     		push	{r7, lr}
 881              		.cfi_def_cfa_offset 8
 882              		.cfi_offset 7, -8
 883              		.cfi_offset 14, -4
 884 0002 82B0     		sub	sp, sp, #8
 885              		.cfi_def_cfa_offset 16
 886 0004 00AF     		add	r7, sp, #0
 887              		.cfi_def_cfa_register 7
 888 0006 7860     		str	r0, [r7, #4]
 889 0008 3960     		str	r1, [r7]
 725:.\Generated_Source\PSoC4/ADC_SAP.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:.\Generated_Source\PSoC4/ADC_SAP.c ****     CYASSERT(chan < ADC_SAP_TOTAL_CHANNELS_NUM);
 890              		.loc 1 726 0
 891 000a 7B68     		ldr	r3, [r7, #4]
 892 000c 002B     		cmp	r3, #0
 893 000e 02D0     		beq	.L64
 894              		.loc 1 726 0 is_stmt 0 discriminator 1
 895 0010 0020     		mov	r0, #0
 896 0012 FFF7FEFF 		bl	CyHalt
 897              	.L64:
 727:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 728:.\Generated_Source\PSoC4/ADC_SAP.c ****     ADC_SAP_countsPer10Volt[chan] = adcGain;
 898              		.loc 1 728 0 is_stmt 1
 899 0016 044B     		ldr	r3, .L65
 900 0018 7A68     		ldr	r2, [r7, #4]
 901 001a 9200     		lsl	r2, r2, #2
 902 001c 3968     		ldr	r1, [r7]
 903 001e D150     		str	r1, [r2, r3]
 729:.\Generated_Source\PSoC4/ADC_SAP.c **** }
 904              		.loc 1 729 0
 905 0020 BD46     		mov	sp, r7
 906 0022 02B0     		add	sp, sp, #8
 907              		@ sp needed
 908 0024 80BD     		pop	{r7, pc}
 909              	.L66:
 910 0026 C046     		.align	2
 911              	.L65:
 912 0028 00000000 		.word	ADC_SAP_countsPer10Volt
 913              		.cfi_endproc
 914              	.LFE16:
 915              		.size	ADC_SAP_SetGain, .-ADC_SAP_SetGain
 916              		.section	.text.ADC_SAP_CountsTo_mVolts,"ax",%progbits
 917              		.align	2
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 30


 918              		.global	ADC_SAP_CountsTo_mVolts
 919              		.code	16
 920              		.thumb_func
 921              		.type	ADC_SAP_CountsTo_mVolts, %function
 922              	ADC_SAP_CountsTo_mVolts:
 923              	.LFB17:
 730:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 731:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 732:.\Generated_Source\PSoC4/ADC_SAP.c **** #if(ADC_SAP_DEFAULT_JUSTIFICATION_SEL == ADC_SAP__RIGHT)
 733:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 734:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 735:.\Generated_Source\PSoC4/ADC_SAP.c ****     /*******************************************************************************
 736:.\Generated_Source\PSoC4/ADC_SAP.c ****     * Function Name: ADC_SAP_CountsTo_mVolts
 737:.\Generated_Source\PSoC4/ADC_SAP.c ****     ********************************************************************************
 738:.\Generated_Source\PSoC4/ADC_SAP.c ****     *
 739:.\Generated_Source\PSoC4/ADC_SAP.c ****     * Summary:
 740:.\Generated_Source\PSoC4/ADC_SAP.c ****     *  This function converts ADC counts to mVolts
 741:.\Generated_Source\PSoC4/ADC_SAP.c ****     *  This function is not available when left data format justification selected.
 742:.\Generated_Source\PSoC4/ADC_SAP.c ****     *
 743:.\Generated_Source\PSoC4/ADC_SAP.c ****     * Parameters:
 744:.\Generated_Source\PSoC4/ADC_SAP.c ****     *  chan: The ADC channel number.
 745:.\Generated_Source\PSoC4/ADC_SAP.c ****     *  adcCounts: Result from the ADC conversion
 746:.\Generated_Source\PSoC4/ADC_SAP.c ****     *
 747:.\Generated_Source\PSoC4/ADC_SAP.c ****     * Return:
 748:.\Generated_Source\PSoC4/ADC_SAP.c ****     *  Results in mVolts
 749:.\Generated_Source\PSoC4/ADC_SAP.c ****     *
 750:.\Generated_Source\PSoC4/ADC_SAP.c ****     * Global variables:
 751:.\Generated_Source\PSoC4/ADC_SAP.c ****     *  ADC_SAP_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:.\Generated_Source\PSoC4/ADC_SAP.c ****     *  ADC_SAP_Offset:  Used as the offset while converting ADC counts
 753:.\Generated_Source\PSoC4/ADC_SAP.c ****     *   to mVolts.
 754:.\Generated_Source\PSoC4/ADC_SAP.c ****     *
 755:.\Generated_Source\PSoC4/ADC_SAP.c ****     *******************************************************************************/
 756:.\Generated_Source\PSoC4/ADC_SAP.c ****     int16 ADC_SAP_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:.\Generated_Source\PSoC4/ADC_SAP.c ****     {
 924              		.loc 1 757 0
 925              		.cfi_startproc
 926 0000 80B5     		push	{r7, lr}
 927              		.cfi_def_cfa_offset 8
 928              		.cfi_offset 7, -8
 929              		.cfi_offset 14, -4
 930 0002 84B0     		sub	sp, sp, #16
 931              		.cfi_def_cfa_offset 24
 932 0004 00AF     		add	r7, sp, #0
 933              		.cfi_def_cfa_register 7
 934 0006 7860     		str	r0, [r7, #4]
 935 0008 0A1C     		mov	r2, r1
 936 000a BB1C     		add	r3, r7, #2
 937 000c 1A80     		strh	r2, [r3]
 758:.\Generated_Source\PSoC4/ADC_SAP.c ****         int16 mVolts;
 759:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 760:.\Generated_Source\PSoC4/ADC_SAP.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:.\Generated_Source\PSoC4/ADC_SAP.c ****         CYASSERT(chan < ADC_SAP_TOTAL_CHANNELS_NUM);
 938              		.loc 1 761 0
 939 000e 7B68     		ldr	r3, [r7, #4]
 940 0010 002B     		cmp	r3, #0
 941 0012 02D0     		beq	.L68
 942              		.loc 1 761 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 31


 943 0014 0020     		mov	r0, #0
 944 0016 FFF7FEFF 		bl	CyHalt
 945              	.L68:
 762:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 763:.\Generated_Source\PSoC4/ADC_SAP.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:.\Generated_Source\PSoC4/ADC_SAP.c ****         #if(ADC_SAP_DEFAULT_AVG_MODE == ADC_SAP__ACCUMULATE)
 765:.\Generated_Source\PSoC4/ADC_SAP.c ****             if((ADC_SAP_channelsConfig[chan] & ADC_SAP_AVERAGING_EN) != 0u)
 766:.\Generated_Source\PSoC4/ADC_SAP.c ****             {
 767:.\Generated_Source\PSoC4/ADC_SAP.c ****                 adcCounts /= ADC_SAP_DEFAULT_AVG_SAMPLES_DIV;
 768:.\Generated_Source\PSoC4/ADC_SAP.c ****             }
 769:.\Generated_Source\PSoC4/ADC_SAP.c ****         #endif /* ADC_SAP_DEFAULT_AVG_MODE == ADC_SAP__ACCUMULATE */
 770:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 771:.\Generated_Source\PSoC4/ADC_SAP.c ****         /* Subtract ADC offset */
 772:.\Generated_Source\PSoC4/ADC_SAP.c ****         adcCounts -= ADC_SAP_offset[chan];
 946              		.loc 1 772 0 is_stmt 1
 947 001a 1F4B     		ldr	r3, .L74
 948 001c 7A68     		ldr	r2, [r7, #4]
 949 001e 5200     		lsl	r2, r2, #1
 950 0020 D35A     		ldrh	r3, [r2, r3]
 951 0022 99B2     		uxth	r1, r3
 952 0024 BB1C     		add	r3, r7, #2
 953 0026 1A88     		ldrh	r2, [r3]
 954 0028 8BB2     		uxth	r3, r1
 955 002a D31A     		sub	r3, r2, r3
 956 002c 9AB2     		uxth	r2, r3
 957 002e BB1C     		add	r3, r7, #2
 958 0030 1A80     		strh	r2, [r3]
 773:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 774:.\Generated_Source\PSoC4/ADC_SAP.c ****         mVolts = (int16)((((int32)adcCounts * ADC_SAP_10MV_COUNTS) + ( (adcCounts > 0) ?
 959              		.loc 1 774 0
 960 0032 BB1C     		add	r3, r7, #2
 961 0034 0022     		mov	r2, #0
 962 0036 9B5E     		ldrsh	r3, [r3, r2]
 963 0038 184A     		ldr	r2, .L74+4
 964 003a 5A43     		mul	r2, r3
 775:.\Generated_Source\PSoC4/ADC_SAP.c ****                  (ADC_SAP_countsPer10Volt[chan] / 2) : (-(ADC_SAP_countsPer10Volt[chan] / 2)) ))
 965              		.loc 1 775 0
 966 003c BB1C     		add	r3, r7, #2
 967 003e 0021     		mov	r1, #0
 968 0040 5B5E     		ldrsh	r3, [r3, r1]
 969 0042 002B     		cmp	r3, #0
 970 0044 08DD     		ble	.L69
 971              		.loc 1 775 0 is_stmt 0 discriminator 1
 972 0046 164B     		ldr	r3, .L74+8
 973 0048 7968     		ldr	r1, [r7, #4]
 974 004a 8900     		lsl	r1, r1, #2
 975 004c CB58     		ldr	r3, [r1, r3]
 976 004e 002B     		cmp	r3, #0
 977 0050 00DA     		bge	.L70
 978 0052 0133     		add	r3, r3, #1
 979              	.L70:
 980 0054 5B10     		asr	r3, r3, #1
 981 0056 08E0     		b	.L71
 982              	.L69:
 983              		.loc 1 775 0 discriminator 2
 984 0058 114B     		ldr	r3, .L74+8
 985 005a 7968     		ldr	r1, [r7, #4]
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 32


 986 005c 8900     		lsl	r1, r1, #2
 987 005e CB58     		ldr	r3, [r1, r3]
 988 0060 002B     		cmp	r3, #0
 989 0062 00DA     		bge	.L72
 990 0064 0133     		add	r3, r3, #1
 991              	.L72:
 992 0066 5B10     		asr	r3, r3, #1
 993 0068 5B42     		neg	r3, r3
 994              	.L71:
 774:.\Generated_Source\PSoC4/ADC_SAP.c ****                  (ADC_SAP_countsPer10Volt[chan] / 2) : (-(ADC_SAP_countsPer10Volt[chan] / 2)) ))
 995              		.loc 1 774 0 is_stmt 1
 996 006a D118     		add	r1, r2, r3
 776:.\Generated_Source\PSoC4/ADC_SAP.c ****                  / ADC_SAP_countsPer10Volt[chan]);
 997              		.loc 1 776 0
 998 006c 0C4B     		ldr	r3, .L74+8
 999 006e 7A68     		ldr	r2, [r7, #4]
 1000 0070 9200     		lsl	r2, r2, #2
 1001 0072 D358     		ldr	r3, [r2, r3]
 1002 0074 081C     		mov	r0, r1
 1003 0076 191C     		mov	r1, r3
 1004 0078 FFF7FEFF 		bl	__aeabi_idiv
 1005 007c 031C     		mov	r3, r0
 1006 007e 1A1C     		mov	r2, r3
 774:.\Generated_Source\PSoC4/ADC_SAP.c ****                  (ADC_SAP_countsPer10Volt[chan] / 2) : (-(ADC_SAP_countsPer10Volt[chan] / 2)) ))
 1007              		.loc 1 774 0
 1008 0080 0E23     		mov	r3, #14
 1009 0082 FB18     		add	r3, r7, r3
 1010 0084 1A80     		strh	r2, [r3]
 777:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 778:.\Generated_Source\PSoC4/ADC_SAP.c ****         return( mVolts );
 1011              		.loc 1 778 0
 1012 0086 0E23     		mov	r3, #14
 1013 0088 FB18     		add	r3, r7, r3
 1014 008a 1B88     		ldrh	r3, [r3]
 1015 008c 1BB2     		sxth	r3, r3
 779:.\Generated_Source\PSoC4/ADC_SAP.c ****     }
 1016              		.loc 1 779 0
 1017 008e 181C     		mov	r0, r3
 1018 0090 BD46     		mov	sp, r7
 1019 0092 04B0     		add	sp, sp, #16
 1020              		@ sp needed
 1021 0094 80BD     		pop	{r7, pc}
 1022              	.L75:
 1023 0096 C046     		.align	2
 1024              	.L74:
 1025 0098 00000000 		.word	ADC_SAP_offset
 1026 009c 10270000 		.word	10000
 1027 00a0 00000000 		.word	ADC_SAP_countsPer10Volt
 1028              		.cfi_endproc
 1029              	.LFE17:
 1030              		.size	ADC_SAP_CountsTo_mVolts, .-ADC_SAP_CountsTo_mVolts
 1031              		.global	__aeabi_lmul
 1032              		.global	__aeabi_ldivmod
 1033              		.section	.text.ADC_SAP_CountsTo_uVolts,"ax",%progbits
 1034              		.align	2
 1035              		.global	ADC_SAP_CountsTo_uVolts
 1036              		.code	16
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 33


 1037              		.thumb_func
 1038              		.type	ADC_SAP_CountsTo_uVolts, %function
 1039              	ADC_SAP_CountsTo_uVolts:
 1040              	.LFB18:
 780:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 781:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 782:.\Generated_Source\PSoC4/ADC_SAP.c ****     /*******************************************************************************
 783:.\Generated_Source\PSoC4/ADC_SAP.c ****     * Function Name: ADC_SAP_CountsTo_uVolts
 784:.\Generated_Source\PSoC4/ADC_SAP.c ****     ********************************************************************************
 785:.\Generated_Source\PSoC4/ADC_SAP.c ****     *
 786:.\Generated_Source\PSoC4/ADC_SAP.c ****     * Summary:
 787:.\Generated_Source\PSoC4/ADC_SAP.c ****     *  This function converts ADC counts to micro Volts
 788:.\Generated_Source\PSoC4/ADC_SAP.c ****     *  This function is not available when left data format justification selected.
 789:.\Generated_Source\PSoC4/ADC_SAP.c ****     *
 790:.\Generated_Source\PSoC4/ADC_SAP.c ****     * Parameters:
 791:.\Generated_Source\PSoC4/ADC_SAP.c ****     *  chan: The ADC channel number.
 792:.\Generated_Source\PSoC4/ADC_SAP.c ****     *  adcCounts: Result from the ADC conversion
 793:.\Generated_Source\PSoC4/ADC_SAP.c ****     *
 794:.\Generated_Source\PSoC4/ADC_SAP.c ****     * Return:
 795:.\Generated_Source\PSoC4/ADC_SAP.c ****     *  Results in uVolts
 796:.\Generated_Source\PSoC4/ADC_SAP.c ****     *
 797:.\Generated_Source\PSoC4/ADC_SAP.c ****     * Global variables:
 798:.\Generated_Source\PSoC4/ADC_SAP.c ****     *  ADC_SAP_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:.\Generated_Source\PSoC4/ADC_SAP.c ****     *  ADC_SAP_Offset:  Used as the offset while converting ADC counts
 800:.\Generated_Source\PSoC4/ADC_SAP.c ****     *   to mVolts.
 801:.\Generated_Source\PSoC4/ADC_SAP.c ****     *
 802:.\Generated_Source\PSoC4/ADC_SAP.c ****     * Theory:
 803:.\Generated_Source\PSoC4/ADC_SAP.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:.\Generated_Source\PSoC4/ADC_SAP.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:.\Generated_Source\PSoC4/ADC_SAP.c ****     *  resolution.
 806:.\Generated_Source\PSoC4/ADC_SAP.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:.\Generated_Source\PSoC4/ADC_SAP.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:.\Generated_Source\PSoC4/ADC_SAP.c ****     *
 809:.\Generated_Source\PSoC4/ADC_SAP.c ****     *******************************************************************************/
 810:.\Generated_Source\PSoC4/ADC_SAP.c ****     int32 ADC_SAP_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:.\Generated_Source\PSoC4/ADC_SAP.c ****     {
 1041              		.loc 1 811 0
 1042              		.cfi_startproc
 1043 0000 B0B5     		push	{r4, r5, r7, lr}
 1044              		.cfi_def_cfa_offset 16
 1045              		.cfi_offset 4, -16
 1046              		.cfi_offset 5, -12
 1047              		.cfi_offset 7, -8
 1048              		.cfi_offset 14, -4
 1049 0002 86B0     		sub	sp, sp, #24
 1050              		.cfi_def_cfa_offset 40
 1051 0004 00AF     		add	r7, sp, #0
 1052              		.cfi_def_cfa_register 7
 1053 0006 F860     		str	r0, [r7, #12]
 1054 0008 0A1C     		mov	r2, r1
 1055 000a 0A23     		mov	r3, #10
 1056 000c FB18     		add	r3, r7, r3
 1057 000e 1A80     		strh	r2, [r3]
 812:.\Generated_Source\PSoC4/ADC_SAP.c ****         int64 uVolts;
 813:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 814:.\Generated_Source\PSoC4/ADC_SAP.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:.\Generated_Source\PSoC4/ADC_SAP.c ****         CYASSERT(chan < ADC_SAP_TOTAL_CHANNELS_NUM);
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 34


 1058              		.loc 1 815 0
 1059 0010 FB68     		ldr	r3, [r7, #12]
 1060 0012 002B     		cmp	r3, #0
 1061 0014 02D0     		beq	.L77
 1062              		.loc 1 815 0 is_stmt 0 discriminator 1
 1063 0016 0020     		mov	r0, #0
 1064 0018 FFF7FEFF 		bl	CyHalt
 1065              	.L77:
 816:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 817:.\Generated_Source\PSoC4/ADC_SAP.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:.\Generated_Source\PSoC4/ADC_SAP.c ****         #if(ADC_SAP_DEFAULT_AVG_MODE == ADC_SAP__ACCUMULATE)
 819:.\Generated_Source\PSoC4/ADC_SAP.c ****             if((ADC_SAP_channelsConfig[chan] & ADC_SAP_AVERAGING_EN) != 0u)
 820:.\Generated_Source\PSoC4/ADC_SAP.c ****             {
 821:.\Generated_Source\PSoC4/ADC_SAP.c ****                 adcCounts /= ADC_SAP_DEFAULT_AVG_SAMPLES_DIV;
 822:.\Generated_Source\PSoC4/ADC_SAP.c ****             }
 823:.\Generated_Source\PSoC4/ADC_SAP.c ****         #endif /* ADC_SAP_DEFAULT_AVG_MODE == ADC_SAP__ACCUMULATE */
 824:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 825:.\Generated_Source\PSoC4/ADC_SAP.c ****         /* Subtract ADC offset */
 826:.\Generated_Source\PSoC4/ADC_SAP.c ****         adcCounts -= ADC_SAP_offset[chan];
 1066              		.loc 1 826 0 is_stmt 1
 1067 001c 194B     		ldr	r3, .L79
 1068 001e FA68     		ldr	r2, [r7, #12]
 1069 0020 5200     		lsl	r2, r2, #1
 1070 0022 D35A     		ldrh	r3, [r2, r3]
 1071 0024 99B2     		uxth	r1, r3
 1072 0026 0A23     		mov	r3, #10
 1073 0028 FB18     		add	r3, r7, r3
 1074 002a 1A88     		ldrh	r2, [r3]
 1075 002c 8BB2     		uxth	r3, r1
 1076 002e D31A     		sub	r3, r2, r3
 1077 0030 9AB2     		uxth	r2, r3
 1078 0032 0A23     		mov	r3, #10
 1079 0034 FB18     		add	r3, r7, r3
 1080 0036 1A80     		strh	r2, [r3]
 827:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 828:.\Generated_Source\PSoC4/ADC_SAP.c ****         uVolts = ((int64)adcCounts * ADC_SAP_10UV_COUNTS) / ADC_SAP_countsPer10Volt[chan];
 1081              		.loc 1 828 0
 1082 0038 0A23     		mov	r3, #10
 1083 003a FB18     		add	r3, r7, r3
 1084 003c 1B88     		ldrh	r3, [r3]
 1085 003e 1BB2     		sxth	r3, r3
 1086 0040 3B60     		str	r3, [r7]
 1087 0042 DB17     		asr	r3, r3, #31
 1088 0044 7B60     		str	r3, [r7, #4]
 1089 0046 3868     		ldr	r0, [r7]
 1090 0048 7968     		ldr	r1, [r7, #4]
 1091 004a 0F4A     		ldr	r2, .L79+4
 1092 004c 0023     		mov	r3, #0
 1093 004e FFF7FEFF 		bl	__aeabi_lmul
 1094 0052 021C     		mov	r2, r0
 1095 0054 0B1C     		mov	r3, r1
 1096 0056 101C     		mov	r0, r2
 1097 0058 191C     		mov	r1, r3
 1098 005a 0C4B     		ldr	r3, .L79+8
 1099 005c FA68     		ldr	r2, [r7, #12]
 1100 005e 9200     		lsl	r2, r2, #2
 1101 0060 D358     		ldr	r3, [r2, r3]
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 35


 1102 0062 1C1C     		mov	r4, r3
 1103 0064 DB17     		asr	r3, r3, #31
 1104 0066 1D1C     		mov	r5, r3
 1105 0068 221C     		mov	r2, r4
 1106 006a 2B1C     		mov	r3, r5
 1107 006c FFF7FEFF 		bl	__aeabi_ldivmod
 1108 0070 031C     		mov	r3, r0
 1109 0072 0C1C     		mov	r4, r1
 1110 0074 3B61     		str	r3, [r7, #16]
 1111 0076 7C61     		str	r4, [r7, #20]
 829:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 830:.\Generated_Source\PSoC4/ADC_SAP.c ****         return( (int32)uVolts );
 1112              		.loc 1 830 0
 1113 0078 3B69     		ldr	r3, [r7, #16]
 831:.\Generated_Source\PSoC4/ADC_SAP.c ****     }
 1114              		.loc 1 831 0
 1115 007a 181C     		mov	r0, r3
 1116 007c BD46     		mov	sp, r7
 1117 007e 06B0     		add	sp, sp, #24
 1118              		@ sp needed
 1119 0080 B0BD     		pop	{r4, r5, r7, pc}
 1120              	.L80:
 1121 0082 C046     		.align	2
 1122              	.L79:
 1123 0084 00000000 		.word	ADC_SAP_offset
 1124 0088 80969800 		.word	10000000
 1125 008c 00000000 		.word	ADC_SAP_countsPer10Volt
 1126              		.cfi_endproc
 1127              	.LFE18:
 1128              		.size	ADC_SAP_CountsTo_uVolts, .-ADC_SAP_CountsTo_uVolts
 1129              		.global	__aeabi_i2f
 1130              		.global	__aeabi_fmul
 1131              		.global	__aeabi_fdiv
 1132              		.section	.text.ADC_SAP_CountsTo_Volts,"ax",%progbits
 1133              		.align	2
 1134              		.global	ADC_SAP_CountsTo_Volts
 1135              		.code	16
 1136              		.thumb_func
 1137              		.type	ADC_SAP_CountsTo_Volts, %function
 1138              	ADC_SAP_CountsTo_Volts:
 1139              	.LFB19:
 832:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 833:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 834:.\Generated_Source\PSoC4/ADC_SAP.c ****     /*******************************************************************************
 835:.\Generated_Source\PSoC4/ADC_SAP.c ****     * Function Name: ADC_SAP_CountsTo_Volts
 836:.\Generated_Source\PSoC4/ADC_SAP.c ****     ********************************************************************************
 837:.\Generated_Source\PSoC4/ADC_SAP.c ****     *
 838:.\Generated_Source\PSoC4/ADC_SAP.c ****     * Summary:
 839:.\Generated_Source\PSoC4/ADC_SAP.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:.\Generated_Source\PSoC4/ADC_SAP.c ****     *  This function is not available when left data format justification selected.
 841:.\Generated_Source\PSoC4/ADC_SAP.c ****     *
 842:.\Generated_Source\PSoC4/ADC_SAP.c ****     * Parameters:
 843:.\Generated_Source\PSoC4/ADC_SAP.c ****     *  chan: The ADC channel number.
 844:.\Generated_Source\PSoC4/ADC_SAP.c ****     *  Result from the ADC conversion
 845:.\Generated_Source\PSoC4/ADC_SAP.c ****     *
 846:.\Generated_Source\PSoC4/ADC_SAP.c ****     * Return:
 847:.\Generated_Source\PSoC4/ADC_SAP.c ****     *  Results in Volts
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 36


 848:.\Generated_Source\PSoC4/ADC_SAP.c ****     *
 849:.\Generated_Source\PSoC4/ADC_SAP.c ****     * Global variables:
 850:.\Generated_Source\PSoC4/ADC_SAP.c ****     *  ADC_SAP_countsPer10Volt:  used to convert ADC counts to Volts.
 851:.\Generated_Source\PSoC4/ADC_SAP.c ****     *  ADC_SAP_Offset:  Used as the offset while converting ADC counts
 852:.\Generated_Source\PSoC4/ADC_SAP.c ****     *   to mVolts.
 853:.\Generated_Source\PSoC4/ADC_SAP.c ****     *
 854:.\Generated_Source\PSoC4/ADC_SAP.c ****     *******************************************************************************/
 855:.\Generated_Source\PSoC4/ADC_SAP.c ****     float32 ADC_SAP_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:.\Generated_Source\PSoC4/ADC_SAP.c ****     {
 1140              		.loc 1 856 0
 1141              		.cfi_startproc
 1142 0000 90B5     		push	{r4, r7, lr}
 1143              		.cfi_def_cfa_offset 12
 1144              		.cfi_offset 4, -12
 1145              		.cfi_offset 7, -8
 1146              		.cfi_offset 14, -4
 1147 0002 85B0     		sub	sp, sp, #20
 1148              		.cfi_def_cfa_offset 32
 1149 0004 00AF     		add	r7, sp, #0
 1150              		.cfi_def_cfa_register 7
 1151 0006 7860     		str	r0, [r7, #4]
 1152 0008 0A1C     		mov	r2, r1
 1153 000a BB1C     		add	r3, r7, #2
 1154 000c 1A80     		strh	r2, [r3]
 857:.\Generated_Source\PSoC4/ADC_SAP.c ****         float32 volts;
 858:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 859:.\Generated_Source\PSoC4/ADC_SAP.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:.\Generated_Source\PSoC4/ADC_SAP.c ****         CYASSERT(chan < ADC_SAP_TOTAL_CHANNELS_NUM);
 1155              		.loc 1 860 0
 1156 000e 7B68     		ldr	r3, [r7, #4]
 1157 0010 002B     		cmp	r3, #0
 1158 0012 02D0     		beq	.L82
 1159              		.loc 1 860 0 is_stmt 0 discriminator 1
 1160 0014 0020     		mov	r0, #0
 1161 0016 FFF7FEFF 		bl	CyHalt
 1162              	.L82:
 861:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 862:.\Generated_Source\PSoC4/ADC_SAP.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:.\Generated_Source\PSoC4/ADC_SAP.c ****         #if(ADC_SAP_DEFAULT_AVG_MODE == ADC_SAP__ACCUMULATE)
 864:.\Generated_Source\PSoC4/ADC_SAP.c ****             if((ADC_SAP_channelsConfig[chan] & ADC_SAP_AVERAGING_EN) != 0u)
 865:.\Generated_Source\PSoC4/ADC_SAP.c ****             {
 866:.\Generated_Source\PSoC4/ADC_SAP.c ****                 adcCounts /= ADC_SAP_DEFAULT_AVG_SAMPLES_DIV;
 867:.\Generated_Source\PSoC4/ADC_SAP.c ****             }
 868:.\Generated_Source\PSoC4/ADC_SAP.c ****         #endif /* ADC_SAP_DEFAULT_AVG_MODE == ADC_SAP__ACCUMULATE */
 869:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 870:.\Generated_Source\PSoC4/ADC_SAP.c ****         /* Subtract ADC offset */
 871:.\Generated_Source\PSoC4/ADC_SAP.c ****         adcCounts -= ADC_SAP_offset[chan];
 1163              		.loc 1 871 0 is_stmt 1
 1164 001a 164B     		ldr	r3, .L84
 1165 001c 7A68     		ldr	r2, [r7, #4]
 1166 001e 5200     		lsl	r2, r2, #1
 1167 0020 D35A     		ldrh	r3, [r2, r3]
 1168 0022 99B2     		uxth	r1, r3
 1169 0024 BB1C     		add	r3, r7, #2
 1170 0026 1A88     		ldrh	r2, [r3]
 1171 0028 8BB2     		uxth	r3, r1
 1172 002a D31A     		sub	r3, r2, r3
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 37


 1173 002c 9AB2     		uxth	r2, r3
 1174 002e BB1C     		add	r3, r7, #2
 1175 0030 1A80     		strh	r2, [r3]
 872:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 873:.\Generated_Source\PSoC4/ADC_SAP.c ****         volts = ((float32)adcCounts * ADC_SAP_10V_COUNTS) / (float32)ADC_SAP_countsPer10Volt[chan];
 1176              		.loc 1 873 0
 1177 0032 BB1C     		add	r3, r7, #2
 1178 0034 0022     		mov	r2, #0
 1179 0036 9B5E     		ldrsh	r3, [r3, r2]
 1180 0038 181C     		mov	r0, r3
 1181 003a FFF7FEFF 		bl	__aeabi_i2f
 1182 003e 031C     		add	r3, r0, #0
 1183 0040 181C     		add	r0, r3, #0
 1184 0042 0D49     		ldr	r1, .L84+4
 1185 0044 FFF7FEFF 		bl	__aeabi_fmul
 1186 0048 031C     		add	r3, r0, #0
 1187 004a 1C1C     		add	r4, r3, #0
 1188 004c 0B4B     		ldr	r3, .L84+8
 1189 004e 7A68     		ldr	r2, [r7, #4]
 1190 0050 9200     		lsl	r2, r2, #2
 1191 0052 D358     		ldr	r3, [r2, r3]
 1192 0054 181C     		mov	r0, r3
 1193 0056 FFF7FEFF 		bl	__aeabi_i2f
 1194 005a 031C     		add	r3, r0, #0
 1195 005c 201C     		add	r0, r4, #0
 1196 005e 191C     		add	r1, r3, #0
 1197 0060 FFF7FEFF 		bl	__aeabi_fdiv
 1198 0064 031C     		add	r3, r0, #0
 1199 0066 FB60     		str	r3, [r7, #12]
 874:.\Generated_Source\PSoC4/ADC_SAP.c **** 
 875:.\Generated_Source\PSoC4/ADC_SAP.c ****         return( volts );
 1200              		.loc 1 875 0
 1201 0068 FB68     		ldr	r3, [r7, #12]
 876:.\Generated_Source\PSoC4/ADC_SAP.c ****     }
 1202              		.loc 1 876 0
 1203 006a 181C     		add	r0, r3, #0
 1204 006c BD46     		mov	sp, r7
 1205 006e 05B0     		add	sp, sp, #20
 1206              		@ sp needed
 1207 0070 90BD     		pop	{r4, r7, pc}
 1208              	.L85:
 1209 0072 C046     		.align	2
 1210              	.L84:
 1211 0074 00000000 		.word	ADC_SAP_offset
 1212 0078 00002041 		.word	1092616192
 1213 007c 00000000 		.word	ADC_SAP_countsPer10Volt
 1214              		.cfi_endproc
 1215              	.LFE19:
 1216              		.size	ADC_SAP_CountsTo_Volts, .-ADC_SAP_CountsTo_Volts
 1217              		.text
 1218              	.Letext0:
 1219              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1220              		.section	.debug_info,"",%progbits
 1221              	.Ldebug_info0:
 1222 0000 77040000 		.4byte	0x477
 1223 0004 0400     		.2byte	0x4
 1224 0006 00000000 		.4byte	.Ldebug_abbrev0
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 38


 1225 000a 04       		.byte	0x4
 1226 000b 01       		.uleb128 0x1
 1227 000c 1A000000 		.4byte	.LASF59
 1228 0010 01       		.byte	0x1
 1229 0011 9A030000 		.4byte	.LASF60
 1230 0015 2C020000 		.4byte	.LASF61
 1231 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1232 001d 00000000 		.4byte	0
 1233 0021 00000000 		.4byte	.Ldebug_line0
 1234 0025 02       		.uleb128 0x2
 1235 0026 01       		.byte	0x1
 1236 0027 06       		.byte	0x6
 1237 0028 8E030000 		.4byte	.LASF0
 1238 002c 02       		.uleb128 0x2
 1239 002d 01       		.byte	0x1
 1240 002e 08       		.byte	0x8
 1241 002f B3010000 		.4byte	.LASF1
 1242 0033 02       		.uleb128 0x2
 1243 0034 02       		.byte	0x2
 1244 0035 05       		.byte	0x5
 1245 0036 4A030000 		.4byte	.LASF2
 1246 003a 02       		.uleb128 0x2
 1247 003b 02       		.byte	0x2
 1248 003c 07       		.byte	0x7
 1249 003d FF000000 		.4byte	.LASF3
 1250 0041 02       		.uleb128 0x2
 1251 0042 04       		.byte	0x4
 1252 0043 05       		.byte	0x5
 1253 0044 69030000 		.4byte	.LASF4
 1254 0048 02       		.uleb128 0x2
 1255 0049 04       		.byte	0x4
 1256 004a 07       		.byte	0x7
 1257 004b E9010000 		.4byte	.LASF5
 1258 004f 02       		.uleb128 0x2
 1259 0050 08       		.byte	0x8
 1260 0051 05       		.byte	0x5
 1261 0052 24030000 		.4byte	.LASF6
 1262 0056 02       		.uleb128 0x2
 1263 0057 08       		.byte	0x8
 1264 0058 07       		.byte	0x7
 1265 0059 A1020000 		.4byte	.LASF7
 1266 005d 03       		.uleb128 0x3
 1267 005e 04       		.byte	0x4
 1268 005f 05       		.byte	0x5
 1269 0060 696E7400 		.ascii	"int\000"
 1270 0064 02       		.uleb128 0x2
 1271 0065 04       		.byte	0x4
 1272 0066 07       		.byte	0x7
 1273 0067 41010000 		.4byte	.LASF8
 1274 006b 04       		.uleb128 0x4
 1275 006c 54030000 		.4byte	.LASF9
 1276 0070 02       		.byte	0x2
 1277 0071 9801     		.2byte	0x198
 1278 0073 2C000000 		.4byte	0x2c
 1279 0077 04       		.uleb128 0x4
 1280 0078 70020000 		.4byte	.LASF10
 1281 007c 02       		.byte	0x2
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 39


 1282 007d 9901     		.2byte	0x199
 1283 007f 3A000000 		.4byte	0x3a
 1284 0083 04       		.uleb128 0x4
 1285 0084 81020000 		.4byte	.LASF11
 1286 0088 02       		.byte	0x2
 1287 0089 9A01     		.2byte	0x19a
 1288 008b 48000000 		.4byte	0x48
 1289 008f 04       		.uleb128 0x4
 1290 0090 E4020000 		.4byte	.LASF12
 1291 0094 02       		.byte	0x2
 1292 0095 9C01     		.2byte	0x19c
 1293 0097 33000000 		.4byte	0x33
 1294 009b 04       		.uleb128 0x4
 1295 009c FB010000 		.4byte	.LASF13
 1296 00a0 02       		.byte	0x2
 1297 00a1 9D01     		.2byte	0x19d
 1298 00a3 41000000 		.4byte	0x41
 1299 00a7 04       		.uleb128 0x4
 1300 00a8 79010000 		.4byte	.LASF14
 1301 00ac 02       		.byte	0x2
 1302 00ad 9E01     		.2byte	0x19e
 1303 00af B3000000 		.4byte	0xb3
 1304 00b3 02       		.uleb128 0x2
 1305 00b4 04       		.byte	0x4
 1306 00b5 04       		.byte	0x4
 1307 00b6 D4000000 		.4byte	.LASF15
 1308 00ba 02       		.uleb128 0x2
 1309 00bb 08       		.byte	0x8
 1310 00bc 04       		.byte	0x4
 1311 00bd 1C020000 		.4byte	.LASF16
 1312 00c1 04       		.uleb128 0x4
 1313 00c2 C4030000 		.4byte	.LASF17
 1314 00c6 02       		.byte	0x2
 1315 00c7 A301     		.2byte	0x1a3
 1316 00c9 4F000000 		.4byte	0x4f
 1317 00cd 02       		.uleb128 0x2
 1318 00ce 01       		.byte	0x1
 1319 00cf 08       		.byte	0x8
 1320 00d0 72030000 		.4byte	.LASF18
 1321 00d4 04       		.uleb128 0x4
 1322 00d5 14000000 		.4byte	.LASF19
 1323 00d9 02       		.byte	0x2
 1324 00da 4402     		.2byte	0x244
 1325 00dc E0000000 		.4byte	0xe0
 1326 00e0 05       		.uleb128 0x5
 1327 00e1 83000000 		.4byte	0x83
 1328 00e5 02       		.uleb128 0x2
 1329 00e6 04       		.byte	0x4
 1330 00e7 07       		.byte	0x7
 1331 00e8 1B030000 		.4byte	.LASF20
 1332 00ec 06       		.uleb128 0x6
 1333 00ed 0E020000 		.4byte	.LASF24
 1334 00f1 01       		.byte	0x1
 1335 00f2 3F       		.byte	0x3f
 1336 00f3 00000000 		.4byte	.LFB2
 1337 00f7 24000000 		.4byte	.LFE2-.LFB2
 1338 00fb 01       		.uleb128 0x1
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 40


 1339 00fc 9C       		.byte	0x9c
 1340 00fd 07       		.uleb128 0x7
 1341 00fe C0000000 		.4byte	.LASF35
 1342 0102 01       		.byte	0x1
 1343 0103 5E       		.byte	0x5e
 1344 0104 00000000 		.4byte	.LFB3
 1345 0108 C4010000 		.4byte	.LFE3-.LFB3
 1346 010c 01       		.uleb128 0x1
 1347 010d 9C       		.byte	0x9c
 1348 010e 3D010000 		.4byte	0x13d
 1349 0112 08       		.uleb128 0x8
 1350 0113 37030000 		.4byte	.LASF21
 1351 0117 01       		.byte	0x1
 1352 0118 60       		.byte	0x60
 1353 0119 83000000 		.4byte	0x83
 1354 011d 02       		.uleb128 0x2
 1355 011e 91       		.byte	0x91
 1356 011f 74       		.sleb128 -12
 1357 0120 08       		.uleb128 0x8
 1358 0121 81010000 		.4byte	.LASF22
 1359 0125 01       		.byte	0x1
 1360 0126 61       		.byte	0x61
 1361 0127 83000000 		.4byte	0x83
 1362 012b 02       		.uleb128 0x2
 1363 012c 91       		.byte	0x91
 1364 012d 6C       		.sleb128 -20
 1365 012e 08       		.uleb128 0x8
 1366 012f 9A020000 		.4byte	.LASF23
 1367 0133 01       		.byte	0x1
 1368 0134 62       		.byte	0x62
 1369 0135 9B000000 		.4byte	0x9b
 1370 0139 02       		.uleb128 0x2
 1371 013a 91       		.byte	0x91
 1372 013b 70       		.sleb128 -16
 1373 013c 00       		.byte	0
 1374 013d 09       		.uleb128 0x9
 1375 013e 4E010000 		.4byte	.LASF25
 1376 0142 01       		.byte	0x1
 1377 0143 4A01     		.2byte	0x14a
 1378 0145 00000000 		.4byte	.LFB4
 1379 0149 38000000 		.4byte	.LFE4-.LFB4
 1380 014d 01       		.uleb128 0x1
 1381 014e 9C       		.byte	0x9c
 1382 014f 0A       		.uleb128 0xa
 1383 0150 01020000 		.4byte	.LASF26
 1384 0154 01       		.byte	0x1
 1385 0155 6D01     		.2byte	0x16d
 1386 0157 00000000 		.4byte	.LFB5
 1387 015b 18000000 		.4byte	.LFE5-.LFB5
 1388 015f 01       		.uleb128 0x1
 1389 0160 9C       		.byte	0x9c
 1390 0161 0A       		.uleb128 0xa
 1391 0162 64010000 		.4byte	.LASF27
 1392 0166 01       		.byte	0x1
 1393 0167 8701     		.2byte	0x187
 1394 0169 00000000 		.4byte	.LFB6
 1395 016d 14000000 		.4byte	.LFE6-.LFB6
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 41


 1396 0171 01       		.uleb128 0x1
 1397 0172 9C       		.byte	0x9c
 1398 0173 0A       		.uleb128 0xa
 1399 0174 00000000 		.4byte	.LASF28
 1400 0178 01       		.byte	0x1
 1401 0179 A001     		.2byte	0x1a0
 1402 017b 00000000 		.4byte	.LFB7
 1403 017f 08000000 		.4byte	.LFE7-.LFB7
 1404 0183 01       		.uleb128 0x1
 1405 0184 9C       		.byte	0x9c
 1406 0185 0B       		.uleb128 0xb
 1407 0186 D1010000 		.4byte	.LASF30
 1408 018a 01       		.byte	0x1
 1409 018b C201     		.2byte	0x1c2
 1410 018d 83000000 		.4byte	0x83
 1411 0191 00000000 		.4byte	.LFB8
 1412 0195 48000000 		.4byte	.LFE8-.LFB8
 1413 0199 01       		.uleb128 0x1
 1414 019a 9C       		.byte	0x9c
 1415 019b BE010000 		.4byte	0x1be
 1416 019f 0C       		.uleb128 0xc
 1417 01a0 3D030000 		.4byte	.LASF32
 1418 01a4 01       		.byte	0x1
 1419 01a5 C201     		.2byte	0x1c2
 1420 01a7 83000000 		.4byte	0x83
 1421 01ab 02       		.uleb128 0x2
 1422 01ac 91       		.byte	0x91
 1423 01ad 6C       		.sleb128 -20
 1424 01ae 0D       		.uleb128 0xd
 1425 01af 5D010000 		.4byte	.LASF29
 1426 01b3 01       		.byte	0x1
 1427 01b4 C401     		.2byte	0x1c4
 1428 01b6 83000000 		.4byte	0x83
 1429 01ba 02       		.uleb128 0x2
 1430 01bb 91       		.byte	0x91
 1431 01bc 74       		.sleb128 -12
 1432 01bd 00       		.byte	0
 1433 01be 0E       		.uleb128 0xe
 1434 01bf B8020000 		.4byte	.LASF31
 1435 01c3 01       		.byte	0x1
 1436 01c4 F801     		.2byte	0x1f8
 1437 01c6 8F000000 		.4byte	0x8f
 1438 01ca 00000000 		.4byte	.LFB9
 1439 01ce 44000000 		.4byte	.LFE9-.LFB9
 1440 01d2 01       		.uleb128 0x1
 1441 01d3 9C       		.byte	0x9c
 1442 01d4 F7010000 		.4byte	0x1f7
 1443 01d8 0C       		.uleb128 0xc
 1444 01d9 45030000 		.4byte	.LASF33
 1445 01dd 01       		.byte	0x1
 1446 01de F801     		.2byte	0x1f8
 1447 01e0 83000000 		.4byte	0x83
 1448 01e4 02       		.uleb128 0x2
 1449 01e5 91       		.byte	0x91
 1450 01e6 6C       		.sleb128 -20
 1451 01e7 0D       		.uleb128 0xd
 1452 01e8 BD030000 		.4byte	.LASF34
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 42


 1453 01ec 01       		.byte	0x1
 1454 01ed FA01     		.2byte	0x1fa
 1455 01ef 83000000 		.4byte	0x83
 1456 01f3 02       		.uleb128 0x2
 1457 01f4 91       		.byte	0x91
 1458 01f5 74       		.sleb128 -12
 1459 01f6 00       		.byte	0
 1460 01f7 0F       		.uleb128 0xf
 1461 01f8 EA020000 		.4byte	.LASF36
 1462 01fc 01       		.byte	0x1
 1463 01fd 2502     		.2byte	0x225
 1464 01ff 00000000 		.4byte	.LFB10
 1465 0203 1C000000 		.4byte	.LFE10-.LFB10
 1466 0207 01       		.uleb128 0x1
 1467 0208 9C       		.byte	0x9c
 1468 0209 1D020000 		.4byte	0x21d
 1469 020d 0C       		.uleb128 0xc
 1470 020e 32030000 		.4byte	.LASF37
 1471 0212 01       		.byte	0x1
 1472 0213 2502     		.2byte	0x225
 1473 0215 83000000 		.4byte	0x83
 1474 0219 02       		.uleb128 0x2
 1475 021a 91       		.byte	0x91
 1476 021b 74       		.sleb128 -12
 1477 021c 00       		.byte	0
 1478 021d 0F       		.uleb128 0xf
 1479 021e E4000000 		.4byte	.LASF38
 1480 0222 01       		.byte	0x1
 1481 0223 5102     		.2byte	0x251
 1482 0225 00000000 		.4byte	.LFB11
 1483 0229 30000000 		.4byte	.LFE11-.LFB11
 1484 022d 01       		.uleb128 0x1
 1485 022e 9C       		.byte	0x9c
 1486 022f 43020000 		.4byte	0x243
 1487 0233 0C       		.uleb128 0xc
 1488 0234 23020000 		.4byte	.LASF39
 1489 0238 01       		.byte	0x1
 1490 0239 5102     		.2byte	0x251
 1491 023b 83000000 		.4byte	0x83
 1492 023f 02       		.uleb128 0x2
 1493 0240 91       		.byte	0x91
 1494 0241 74       		.sleb128 -12
 1495 0242 00       		.byte	0
 1496 0243 0F       		.uleb128 0xf
 1497 0244 CA030000 		.4byte	.LASF40
 1498 0248 01       		.byte	0x1
 1499 0249 6602     		.2byte	0x266
 1500 024b 00000000 		.4byte	.LFB12
 1501 024f 2C000000 		.4byte	.LFE12-.LFB12
 1502 0253 01       		.uleb128 0x1
 1503 0254 9C       		.byte	0x9c
 1504 0255 69020000 		.4byte	0x269
 1505 0259 0C       		.uleb128 0xc
 1506 025a DA000000 		.4byte	.LASF41
 1507 025e 01       		.byte	0x1
 1508 025f 6602     		.2byte	0x266
 1509 0261 83000000 		.4byte	0x83
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 43


 1510 0265 02       		.uleb128 0x2
 1511 0266 91       		.byte	0x91
 1512 0267 74       		.sleb128 -12
 1513 0268 00       		.byte	0
 1514 0269 0F       		.uleb128 0xf
 1515 026a 9E010000 		.4byte	.LASF42
 1516 026e 01       		.byte	0x1
 1517 026f 7E02     		.2byte	0x27e
 1518 0271 00000000 		.4byte	.LFB13
 1519 0275 1C000000 		.4byte	.LFE13-.LFB13
 1520 0279 01       		.uleb128 0x1
 1521 027a 9C       		.byte	0x9c
 1522 027b 8F020000 		.4byte	0x28f
 1523 027f 0C       		.uleb128 0xc
 1524 0280 32030000 		.4byte	.LASF37
 1525 0284 01       		.byte	0x1
 1526 0285 7E02     		.2byte	0x27e
 1527 0287 83000000 		.4byte	0x83
 1528 028b 02       		.uleb128 0x2
 1529 028c 91       		.byte	0x91
 1530 028d 74       		.sleb128 -12
 1531 028e 00       		.byte	0
 1532 028f 0F       		.uleb128 0xf
 1533 0290 8B010000 		.4byte	.LASF43
 1534 0294 01       		.byte	0x1
 1535 0295 9502     		.2byte	0x295
 1536 0297 00000000 		.4byte	.LFB14
 1537 029b 1C000000 		.4byte	.LFE14-.LFB14
 1538 029f 01       		.uleb128 0x1
 1539 02a0 9C       		.byte	0x9c
 1540 02a1 B5020000 		.4byte	0x2b5
 1541 02a5 0C       		.uleb128 0xc
 1542 02a6 32030000 		.4byte	.LASF37
 1543 02aa 01       		.byte	0x1
 1544 02ab 9502     		.2byte	0x295
 1545 02ad 83000000 		.4byte	0x83
 1546 02b1 02       		.uleb128 0x2
 1547 02b2 91       		.byte	0x91
 1548 02b3 74       		.sleb128 -12
 1549 02b4 00       		.byte	0
 1550 02b5 10       		.uleb128 0x10
 1551 02b6 88020000 		.4byte	.LASF44
 1552 02ba 01       		.byte	0x1
 1553 02bb B102     		.2byte	0x2b1
 1554 02bd 00000000 		.4byte	.LFB15
 1555 02c1 30000000 		.4byte	.LFE15-.LFB15
 1556 02c5 01       		.uleb128 0x1
 1557 02c6 9C       		.byte	0x9c
 1558 02c7 EA020000 		.4byte	0x2ea
 1559 02cb 0C       		.uleb128 0xc
 1560 02cc 45030000 		.4byte	.LASF33
 1561 02d0 01       		.byte	0x1
 1562 02d1 B102     		.2byte	0x2b1
 1563 02d3 83000000 		.4byte	0x83
 1564 02d7 02       		.uleb128 0x2
 1565 02d8 91       		.byte	0x91
 1566 02d9 74       		.sleb128 -12
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 44


 1567 02da 0C       		.uleb128 0xc
 1568 02db CD000000 		.4byte	.LASF45
 1569 02df 01       		.byte	0x1
 1570 02e0 B102     		.2byte	0x2b1
 1571 02e2 8F000000 		.4byte	0x8f
 1572 02e6 02       		.uleb128 0x2
 1573 02e7 91       		.byte	0x91
 1574 02e8 72       		.sleb128 -14
 1575 02e9 00       		.byte	0
 1576 02ea 10       		.uleb128 0x10
 1577 02eb 04030000 		.4byte	.LASF46
 1578 02ef 01       		.byte	0x1
 1579 02f0 D302     		.2byte	0x2d3
 1580 02f2 00000000 		.4byte	.LFB16
 1581 02f6 2C000000 		.4byte	.LFE16-.LFB16
 1582 02fa 01       		.uleb128 0x1
 1583 02fb 9C       		.byte	0x9c
 1584 02fc 1F030000 		.4byte	0x31f
 1585 0300 0C       		.uleb128 0xc
 1586 0301 45030000 		.4byte	.LASF33
 1587 0305 01       		.byte	0x1
 1588 0306 D302     		.2byte	0x2d3
 1589 0308 83000000 		.4byte	0x83
 1590 030c 02       		.uleb128 0x2
 1591 030d 91       		.byte	0x91
 1592 030e 74       		.sleb128 -12
 1593 030f 0C       		.uleb128 0xc
 1594 0310 68020000 		.4byte	.LASF47
 1595 0314 01       		.byte	0x1
 1596 0315 D302     		.2byte	0x2d3
 1597 0317 9B000000 		.4byte	0x9b
 1598 031b 02       		.uleb128 0x2
 1599 031c 91       		.byte	0x91
 1600 031d 70       		.sleb128 -16
 1601 031e 00       		.byte	0
 1602 031f 0E       		.uleb128 0xe
 1603 0320 29010000 		.4byte	.LASF48
 1604 0324 01       		.byte	0x1
 1605 0325 F402     		.2byte	0x2f4
 1606 0327 8F000000 		.4byte	0x8f
 1607 032b 00000000 		.4byte	.LFB17
 1608 032f A4000000 		.4byte	.LFE17-.LFB17
 1609 0333 01       		.uleb128 0x1
 1610 0334 9C       		.byte	0x9c
 1611 0335 67030000 		.4byte	0x367
 1612 0339 0C       		.uleb128 0xc
 1613 033a 45030000 		.4byte	.LASF33
 1614 033e 01       		.byte	0x1
 1615 033f F402     		.2byte	0x2f4
 1616 0341 83000000 		.4byte	0x83
 1617 0345 02       		.uleb128 0x2
 1618 0346 91       		.byte	0x91
 1619 0347 6C       		.sleb128 -20
 1620 0348 0C       		.uleb128 0xc
 1621 0349 77020000 		.4byte	.LASF49
 1622 034d 01       		.byte	0x1
 1623 034e F402     		.2byte	0x2f4
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 45


 1624 0350 8F000000 		.4byte	0x8f
 1625 0354 02       		.uleb128 0x2
 1626 0355 91       		.byte	0x91
 1627 0356 6A       		.sleb128 -22
 1628 0357 0D       		.uleb128 0xd
 1629 0358 14030000 		.4byte	.LASF50
 1630 035c 01       		.byte	0x1
 1631 035d F602     		.2byte	0x2f6
 1632 035f 8F000000 		.4byte	0x8f
 1633 0363 02       		.uleb128 0x2
 1634 0364 91       		.byte	0x91
 1635 0365 76       		.sleb128 -10
 1636 0366 00       		.byte	0
 1637 0367 0E       		.uleb128 0xe
 1638 0368 A8000000 		.4byte	.LASF51
 1639 036c 01       		.byte	0x1
 1640 036d 2A03     		.2byte	0x32a
 1641 036f 9B000000 		.4byte	0x9b
 1642 0373 00000000 		.4byte	.LFB18
 1643 0377 90000000 		.4byte	.LFE18-.LFB18
 1644 037b 01       		.uleb128 0x1
 1645 037c 9C       		.byte	0x9c
 1646 037d AF030000 		.4byte	0x3af
 1647 0381 0C       		.uleb128 0xc
 1648 0382 45030000 		.4byte	.LASF33
 1649 0386 01       		.byte	0x1
 1650 0387 2A03     		.2byte	0x32a
 1651 0389 83000000 		.4byte	0x83
 1652 038d 02       		.uleb128 0x2
 1653 038e 91       		.byte	0x91
 1654 038f 64       		.sleb128 -28
 1655 0390 0C       		.uleb128 0xc
 1656 0391 77020000 		.4byte	.LASF49
 1657 0395 01       		.byte	0x1
 1658 0396 2A03     		.2byte	0x32a
 1659 0398 8F000000 		.4byte	0x8f
 1660 039c 02       		.uleb128 0x2
 1661 039d 91       		.byte	0x91
 1662 039e 62       		.sleb128 -30
 1663 039f 0D       		.uleb128 0xd
 1664 03a0 F8000000 		.4byte	.LASF52
 1665 03a4 01       		.byte	0x1
 1666 03a5 2C03     		.2byte	0x32c
 1667 03a7 C1000000 		.4byte	0xc1
 1668 03ab 02       		.uleb128 0x2
 1669 03ac 91       		.byte	0x91
 1670 03ad 68       		.sleb128 -24
 1671 03ae 00       		.byte	0
 1672 03af 0E       		.uleb128 0xe
 1673 03b0 12010000 		.4byte	.LASF53
 1674 03b4 01       		.byte	0x1
 1675 03b5 5703     		.2byte	0x357
 1676 03b7 A7000000 		.4byte	0xa7
 1677 03bb 00000000 		.4byte	.LFB19
 1678 03bf 80000000 		.4byte	.LFE19-.LFB19
 1679 03c3 01       		.uleb128 0x1
 1680 03c4 9C       		.byte	0x9c
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 46


 1681 03c5 F7030000 		.4byte	0x3f7
 1682 03c9 0C       		.uleb128 0xc
 1683 03ca 45030000 		.4byte	.LASF33
 1684 03ce 01       		.byte	0x1
 1685 03cf 5703     		.2byte	0x357
 1686 03d1 83000000 		.4byte	0x83
 1687 03d5 02       		.uleb128 0x2
 1688 03d6 91       		.byte	0x91
 1689 03d7 64       		.sleb128 -28
 1690 03d8 0C       		.uleb128 0xc
 1691 03d9 77020000 		.4byte	.LASF49
 1692 03dd 01       		.byte	0x1
 1693 03de 5703     		.2byte	0x357
 1694 03e0 8F000000 		.4byte	0x8f
 1695 03e4 02       		.uleb128 0x2
 1696 03e5 91       		.byte	0x91
 1697 03e6 62       		.sleb128 -30
 1698 03e7 0D       		.uleb128 0xd
 1699 03e8 FE020000 		.4byte	.LASF54
 1700 03ec 01       		.byte	0x1
 1701 03ed 5903     		.2byte	0x359
 1702 03ef A7000000 		.4byte	0xa7
 1703 03f3 02       		.uleb128 0x2
 1704 03f4 91       		.byte	0x91
 1705 03f5 6C       		.sleb128 -20
 1706 03f6 00       		.byte	0
 1707 03f7 11       		.uleb128 0x11
 1708 03f8 83000000 		.4byte	0x83
 1709 03fc 07040000 		.4byte	0x407
 1710 0400 12       		.uleb128 0x12
 1711 0401 E5000000 		.4byte	0xe5
 1712 0405 00       		.byte	0
 1713 0406 00       		.byte	0
 1714 0407 08       		.uleb128 0x8
 1715 0408 77030000 		.4byte	.LASF55
 1716 040c 01       		.byte	0x1
 1717 040d 21       		.byte	0x21
 1718 040e 18040000 		.4byte	0x418
 1719 0412 05       		.uleb128 0x5
 1720 0413 03       		.byte	0x3
 1721 0414 00000000 		.4byte	ADC_SAP_channelsConfig
 1722 0418 13       		.uleb128 0x13
 1723 0419 F7030000 		.4byte	0x3f7
 1724 041d 14       		.uleb128 0x14
 1725 041e C1010000 		.4byte	.LASF56
 1726 0422 01       		.byte	0x1
 1727 0423 18       		.byte	0x18
 1728 0424 6B000000 		.4byte	0x6b
 1729 0428 05       		.uleb128 0x5
 1730 0429 03       		.byte	0x3
 1731 042a 00000000 		.4byte	ADC_SAP_initVar
 1732 042e 11       		.uleb128 0x11
 1733 042f 8F000000 		.4byte	0x8f
 1734 0433 3E040000 		.4byte	0x43e
 1735 0437 12       		.uleb128 0x12
 1736 0438 E5000000 		.4byte	0xe5
 1737 043c 00       		.byte	0
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 47


 1738 043d 00       		.byte	0
 1739 043e 14       		.uleb128 0x14
 1740 043f 5A030000 		.4byte	.LASF57
 1741 0443 01       		.byte	0x1
 1742 0444 19       		.byte	0x19
 1743 0445 4F040000 		.4byte	0x44f
 1744 0449 05       		.uleb128 0x5
 1745 044a 03       		.byte	0x3
 1746 044b 00000000 		.4byte	ADC_SAP_offset
 1747 044f 05       		.uleb128 0x5
 1748 0450 2E040000 		.4byte	0x42e
 1749 0454 11       		.uleb128 0x11
 1750 0455 9B000000 		.4byte	0x9b
 1751 0459 64040000 		.4byte	0x464
 1752 045d 12       		.uleb128 0x12
 1753 045e E5000000 		.4byte	0xe5
 1754 0462 00       		.byte	0
 1755 0463 00       		.byte	0
 1756 0464 14       		.uleb128 0x14
 1757 0465 CC020000 		.4byte	.LASF58
 1758 0469 01       		.byte	0x1
 1759 046a 1A       		.byte	0x1a
 1760 046b 75040000 		.4byte	0x475
 1761 046f 05       		.uleb128 0x5
 1762 0470 03       		.byte	0x3
 1763 0471 00000000 		.4byte	ADC_SAP_countsPer10Volt
 1764 0475 05       		.uleb128 0x5
 1765 0476 54040000 		.4byte	0x454
 1766 047a 00       		.byte	0
 1767              		.section	.debug_abbrev,"",%progbits
 1768              	.Ldebug_abbrev0:
 1769 0000 01       		.uleb128 0x1
 1770 0001 11       		.uleb128 0x11
 1771 0002 01       		.byte	0x1
 1772 0003 25       		.uleb128 0x25
 1773 0004 0E       		.uleb128 0xe
 1774 0005 13       		.uleb128 0x13
 1775 0006 0B       		.uleb128 0xb
 1776 0007 03       		.uleb128 0x3
 1777 0008 0E       		.uleb128 0xe
 1778 0009 1B       		.uleb128 0x1b
 1779 000a 0E       		.uleb128 0xe
 1780 000b 55       		.uleb128 0x55
 1781 000c 17       		.uleb128 0x17
 1782 000d 11       		.uleb128 0x11
 1783 000e 01       		.uleb128 0x1
 1784 000f 10       		.uleb128 0x10
 1785 0010 17       		.uleb128 0x17
 1786 0011 00       		.byte	0
 1787 0012 00       		.byte	0
 1788 0013 02       		.uleb128 0x2
 1789 0014 24       		.uleb128 0x24
 1790 0015 00       		.byte	0
 1791 0016 0B       		.uleb128 0xb
 1792 0017 0B       		.uleb128 0xb
 1793 0018 3E       		.uleb128 0x3e
 1794 0019 0B       		.uleb128 0xb
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 48


 1795 001a 03       		.uleb128 0x3
 1796 001b 0E       		.uleb128 0xe
 1797 001c 00       		.byte	0
 1798 001d 00       		.byte	0
 1799 001e 03       		.uleb128 0x3
 1800 001f 24       		.uleb128 0x24
 1801 0020 00       		.byte	0
 1802 0021 0B       		.uleb128 0xb
 1803 0022 0B       		.uleb128 0xb
 1804 0023 3E       		.uleb128 0x3e
 1805 0024 0B       		.uleb128 0xb
 1806 0025 03       		.uleb128 0x3
 1807 0026 08       		.uleb128 0x8
 1808 0027 00       		.byte	0
 1809 0028 00       		.byte	0
 1810 0029 04       		.uleb128 0x4
 1811 002a 16       		.uleb128 0x16
 1812 002b 00       		.byte	0
 1813 002c 03       		.uleb128 0x3
 1814 002d 0E       		.uleb128 0xe
 1815 002e 3A       		.uleb128 0x3a
 1816 002f 0B       		.uleb128 0xb
 1817 0030 3B       		.uleb128 0x3b
 1818 0031 05       		.uleb128 0x5
 1819 0032 49       		.uleb128 0x49
 1820 0033 13       		.uleb128 0x13
 1821 0034 00       		.byte	0
 1822 0035 00       		.byte	0
 1823 0036 05       		.uleb128 0x5
 1824 0037 35       		.uleb128 0x35
 1825 0038 00       		.byte	0
 1826 0039 49       		.uleb128 0x49
 1827 003a 13       		.uleb128 0x13
 1828 003b 00       		.byte	0
 1829 003c 00       		.byte	0
 1830 003d 06       		.uleb128 0x6
 1831 003e 2E       		.uleb128 0x2e
 1832 003f 00       		.byte	0
 1833 0040 3F       		.uleb128 0x3f
 1834 0041 19       		.uleb128 0x19
 1835 0042 03       		.uleb128 0x3
 1836 0043 0E       		.uleb128 0xe
 1837 0044 3A       		.uleb128 0x3a
 1838 0045 0B       		.uleb128 0xb
 1839 0046 3B       		.uleb128 0x3b
 1840 0047 0B       		.uleb128 0xb
 1841 0048 27       		.uleb128 0x27
 1842 0049 19       		.uleb128 0x19
 1843 004a 11       		.uleb128 0x11
 1844 004b 01       		.uleb128 0x1
 1845 004c 12       		.uleb128 0x12
 1846 004d 06       		.uleb128 0x6
 1847 004e 40       		.uleb128 0x40
 1848 004f 18       		.uleb128 0x18
 1849 0050 9642     		.uleb128 0x2116
 1850 0052 19       		.uleb128 0x19
 1851 0053 00       		.byte	0
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 49


 1852 0054 00       		.byte	0
 1853 0055 07       		.uleb128 0x7
 1854 0056 2E       		.uleb128 0x2e
 1855 0057 01       		.byte	0x1
 1856 0058 3F       		.uleb128 0x3f
 1857 0059 19       		.uleb128 0x19
 1858 005a 03       		.uleb128 0x3
 1859 005b 0E       		.uleb128 0xe
 1860 005c 3A       		.uleb128 0x3a
 1861 005d 0B       		.uleb128 0xb
 1862 005e 3B       		.uleb128 0x3b
 1863 005f 0B       		.uleb128 0xb
 1864 0060 27       		.uleb128 0x27
 1865 0061 19       		.uleb128 0x19
 1866 0062 11       		.uleb128 0x11
 1867 0063 01       		.uleb128 0x1
 1868 0064 12       		.uleb128 0x12
 1869 0065 06       		.uleb128 0x6
 1870 0066 40       		.uleb128 0x40
 1871 0067 18       		.uleb128 0x18
 1872 0068 9642     		.uleb128 0x2116
 1873 006a 19       		.uleb128 0x19
 1874 006b 01       		.uleb128 0x1
 1875 006c 13       		.uleb128 0x13
 1876 006d 00       		.byte	0
 1877 006e 00       		.byte	0
 1878 006f 08       		.uleb128 0x8
 1879 0070 34       		.uleb128 0x34
 1880 0071 00       		.byte	0
 1881 0072 03       		.uleb128 0x3
 1882 0073 0E       		.uleb128 0xe
 1883 0074 3A       		.uleb128 0x3a
 1884 0075 0B       		.uleb128 0xb
 1885 0076 3B       		.uleb128 0x3b
 1886 0077 0B       		.uleb128 0xb
 1887 0078 49       		.uleb128 0x49
 1888 0079 13       		.uleb128 0x13
 1889 007a 02       		.uleb128 0x2
 1890 007b 18       		.uleb128 0x18
 1891 007c 00       		.byte	0
 1892 007d 00       		.byte	0
 1893 007e 09       		.uleb128 0x9
 1894 007f 2E       		.uleb128 0x2e
 1895 0080 00       		.byte	0
 1896 0081 3F       		.uleb128 0x3f
 1897 0082 19       		.uleb128 0x19
 1898 0083 03       		.uleb128 0x3
 1899 0084 0E       		.uleb128 0xe
 1900 0085 3A       		.uleb128 0x3a
 1901 0086 0B       		.uleb128 0xb
 1902 0087 3B       		.uleb128 0x3b
 1903 0088 05       		.uleb128 0x5
 1904 0089 27       		.uleb128 0x27
 1905 008a 19       		.uleb128 0x19
 1906 008b 11       		.uleb128 0x11
 1907 008c 01       		.uleb128 0x1
 1908 008d 12       		.uleb128 0x12
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 50


 1909 008e 06       		.uleb128 0x6
 1910 008f 40       		.uleb128 0x40
 1911 0090 18       		.uleb128 0x18
 1912 0091 9642     		.uleb128 0x2116
 1913 0093 19       		.uleb128 0x19
 1914 0094 00       		.byte	0
 1915 0095 00       		.byte	0
 1916 0096 0A       		.uleb128 0xa
 1917 0097 2E       		.uleb128 0x2e
 1918 0098 00       		.byte	0
 1919 0099 3F       		.uleb128 0x3f
 1920 009a 19       		.uleb128 0x19
 1921 009b 03       		.uleb128 0x3
 1922 009c 0E       		.uleb128 0xe
 1923 009d 3A       		.uleb128 0x3a
 1924 009e 0B       		.uleb128 0xb
 1925 009f 3B       		.uleb128 0x3b
 1926 00a0 05       		.uleb128 0x5
 1927 00a1 27       		.uleb128 0x27
 1928 00a2 19       		.uleb128 0x19
 1929 00a3 11       		.uleb128 0x11
 1930 00a4 01       		.uleb128 0x1
 1931 00a5 12       		.uleb128 0x12
 1932 00a6 06       		.uleb128 0x6
 1933 00a7 40       		.uleb128 0x40
 1934 00a8 18       		.uleb128 0x18
 1935 00a9 9742     		.uleb128 0x2117
 1936 00ab 19       		.uleb128 0x19
 1937 00ac 00       		.byte	0
 1938 00ad 00       		.byte	0
 1939 00ae 0B       		.uleb128 0xb
 1940 00af 2E       		.uleb128 0x2e
 1941 00b0 01       		.byte	0x1
 1942 00b1 3F       		.uleb128 0x3f
 1943 00b2 19       		.uleb128 0x19
 1944 00b3 03       		.uleb128 0x3
 1945 00b4 0E       		.uleb128 0xe
 1946 00b5 3A       		.uleb128 0x3a
 1947 00b6 0B       		.uleb128 0xb
 1948 00b7 3B       		.uleb128 0x3b
 1949 00b8 05       		.uleb128 0x5
 1950 00b9 27       		.uleb128 0x27
 1951 00ba 19       		.uleb128 0x19
 1952 00bb 49       		.uleb128 0x49
 1953 00bc 13       		.uleb128 0x13
 1954 00bd 11       		.uleb128 0x11
 1955 00be 01       		.uleb128 0x1
 1956 00bf 12       		.uleb128 0x12
 1957 00c0 06       		.uleb128 0x6
 1958 00c1 40       		.uleb128 0x40
 1959 00c2 18       		.uleb128 0x18
 1960 00c3 9742     		.uleb128 0x2117
 1961 00c5 19       		.uleb128 0x19
 1962 00c6 01       		.uleb128 0x1
 1963 00c7 13       		.uleb128 0x13
 1964 00c8 00       		.byte	0
 1965 00c9 00       		.byte	0
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 51


 1966 00ca 0C       		.uleb128 0xc
 1967 00cb 05       		.uleb128 0x5
 1968 00cc 00       		.byte	0
 1969 00cd 03       		.uleb128 0x3
 1970 00ce 0E       		.uleb128 0xe
 1971 00cf 3A       		.uleb128 0x3a
 1972 00d0 0B       		.uleb128 0xb
 1973 00d1 3B       		.uleb128 0x3b
 1974 00d2 05       		.uleb128 0x5
 1975 00d3 49       		.uleb128 0x49
 1976 00d4 13       		.uleb128 0x13
 1977 00d5 02       		.uleb128 0x2
 1978 00d6 18       		.uleb128 0x18
 1979 00d7 00       		.byte	0
 1980 00d8 00       		.byte	0
 1981 00d9 0D       		.uleb128 0xd
 1982 00da 34       		.uleb128 0x34
 1983 00db 00       		.byte	0
 1984 00dc 03       		.uleb128 0x3
 1985 00dd 0E       		.uleb128 0xe
 1986 00de 3A       		.uleb128 0x3a
 1987 00df 0B       		.uleb128 0xb
 1988 00e0 3B       		.uleb128 0x3b
 1989 00e1 05       		.uleb128 0x5
 1990 00e2 49       		.uleb128 0x49
 1991 00e3 13       		.uleb128 0x13
 1992 00e4 02       		.uleb128 0x2
 1993 00e5 18       		.uleb128 0x18
 1994 00e6 00       		.byte	0
 1995 00e7 00       		.byte	0
 1996 00e8 0E       		.uleb128 0xe
 1997 00e9 2E       		.uleb128 0x2e
 1998 00ea 01       		.byte	0x1
 1999 00eb 3F       		.uleb128 0x3f
 2000 00ec 19       		.uleb128 0x19
 2001 00ed 03       		.uleb128 0x3
 2002 00ee 0E       		.uleb128 0xe
 2003 00ef 3A       		.uleb128 0x3a
 2004 00f0 0B       		.uleb128 0xb
 2005 00f1 3B       		.uleb128 0x3b
 2006 00f2 05       		.uleb128 0x5
 2007 00f3 27       		.uleb128 0x27
 2008 00f4 19       		.uleb128 0x19
 2009 00f5 49       		.uleb128 0x49
 2010 00f6 13       		.uleb128 0x13
 2011 00f7 11       		.uleb128 0x11
 2012 00f8 01       		.uleb128 0x1
 2013 00f9 12       		.uleb128 0x12
 2014 00fa 06       		.uleb128 0x6
 2015 00fb 40       		.uleb128 0x40
 2016 00fc 18       		.uleb128 0x18
 2017 00fd 9642     		.uleb128 0x2116
 2018 00ff 19       		.uleb128 0x19
 2019 0100 01       		.uleb128 0x1
 2020 0101 13       		.uleb128 0x13
 2021 0102 00       		.byte	0
 2022 0103 00       		.byte	0
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 52


 2023 0104 0F       		.uleb128 0xf
 2024 0105 2E       		.uleb128 0x2e
 2025 0106 01       		.byte	0x1
 2026 0107 3F       		.uleb128 0x3f
 2027 0108 19       		.uleb128 0x19
 2028 0109 03       		.uleb128 0x3
 2029 010a 0E       		.uleb128 0xe
 2030 010b 3A       		.uleb128 0x3a
 2031 010c 0B       		.uleb128 0xb
 2032 010d 3B       		.uleb128 0x3b
 2033 010e 05       		.uleb128 0x5
 2034 010f 27       		.uleb128 0x27
 2035 0110 19       		.uleb128 0x19
 2036 0111 11       		.uleb128 0x11
 2037 0112 01       		.uleb128 0x1
 2038 0113 12       		.uleb128 0x12
 2039 0114 06       		.uleb128 0x6
 2040 0115 40       		.uleb128 0x40
 2041 0116 18       		.uleb128 0x18
 2042 0117 9742     		.uleb128 0x2117
 2043 0119 19       		.uleb128 0x19
 2044 011a 01       		.uleb128 0x1
 2045 011b 13       		.uleb128 0x13
 2046 011c 00       		.byte	0
 2047 011d 00       		.byte	0
 2048 011e 10       		.uleb128 0x10
 2049 011f 2E       		.uleb128 0x2e
 2050 0120 01       		.byte	0x1
 2051 0121 3F       		.uleb128 0x3f
 2052 0122 19       		.uleb128 0x19
 2053 0123 03       		.uleb128 0x3
 2054 0124 0E       		.uleb128 0xe
 2055 0125 3A       		.uleb128 0x3a
 2056 0126 0B       		.uleb128 0xb
 2057 0127 3B       		.uleb128 0x3b
 2058 0128 05       		.uleb128 0x5
 2059 0129 27       		.uleb128 0x27
 2060 012a 19       		.uleb128 0x19
 2061 012b 11       		.uleb128 0x11
 2062 012c 01       		.uleb128 0x1
 2063 012d 12       		.uleb128 0x12
 2064 012e 06       		.uleb128 0x6
 2065 012f 40       		.uleb128 0x40
 2066 0130 18       		.uleb128 0x18
 2067 0131 9642     		.uleb128 0x2116
 2068 0133 19       		.uleb128 0x19
 2069 0134 01       		.uleb128 0x1
 2070 0135 13       		.uleb128 0x13
 2071 0136 00       		.byte	0
 2072 0137 00       		.byte	0
 2073 0138 11       		.uleb128 0x11
 2074 0139 01       		.uleb128 0x1
 2075 013a 01       		.byte	0x1
 2076 013b 49       		.uleb128 0x49
 2077 013c 13       		.uleb128 0x13
 2078 013d 01       		.uleb128 0x1
 2079 013e 13       		.uleb128 0x13
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 53


 2080 013f 00       		.byte	0
 2081 0140 00       		.byte	0
 2082 0141 12       		.uleb128 0x12
 2083 0142 21       		.uleb128 0x21
 2084 0143 00       		.byte	0
 2085 0144 49       		.uleb128 0x49
 2086 0145 13       		.uleb128 0x13
 2087 0146 2F       		.uleb128 0x2f
 2088 0147 0B       		.uleb128 0xb
 2089 0148 00       		.byte	0
 2090 0149 00       		.byte	0
 2091 014a 13       		.uleb128 0x13
 2092 014b 26       		.uleb128 0x26
 2093 014c 00       		.byte	0
 2094 014d 49       		.uleb128 0x49
 2095 014e 13       		.uleb128 0x13
 2096 014f 00       		.byte	0
 2097 0150 00       		.byte	0
 2098 0151 14       		.uleb128 0x14
 2099 0152 34       		.uleb128 0x34
 2100 0153 00       		.byte	0
 2101 0154 03       		.uleb128 0x3
 2102 0155 0E       		.uleb128 0xe
 2103 0156 3A       		.uleb128 0x3a
 2104 0157 0B       		.uleb128 0xb
 2105 0158 3B       		.uleb128 0x3b
 2106 0159 0B       		.uleb128 0xb
 2107 015a 49       		.uleb128 0x49
 2108 015b 13       		.uleb128 0x13
 2109 015c 3F       		.uleb128 0x3f
 2110 015d 19       		.uleb128 0x19
 2111 015e 02       		.uleb128 0x2
 2112 015f 18       		.uleb128 0x18
 2113 0160 00       		.byte	0
 2114 0161 00       		.byte	0
 2115 0162 00       		.byte	0
 2116              		.section	.debug_aranges,"",%progbits
 2117 0000 A4000000 		.4byte	0xa4
 2118 0004 0200     		.2byte	0x2
 2119 0006 00000000 		.4byte	.Ldebug_info0
 2120 000a 04       		.byte	0x4
 2121 000b 00       		.byte	0
 2122 000c 0000     		.2byte	0
 2123 000e 0000     		.2byte	0
 2124 0010 00000000 		.4byte	.LFB2
 2125 0014 24000000 		.4byte	.LFE2-.LFB2
 2126 0018 00000000 		.4byte	.LFB3
 2127 001c C4010000 		.4byte	.LFE3-.LFB3
 2128 0020 00000000 		.4byte	.LFB4
 2129 0024 38000000 		.4byte	.LFE4-.LFB4
 2130 0028 00000000 		.4byte	.LFB5
 2131 002c 18000000 		.4byte	.LFE5-.LFB5
 2132 0030 00000000 		.4byte	.LFB6
 2133 0034 14000000 		.4byte	.LFE6-.LFB6
 2134 0038 00000000 		.4byte	.LFB7
 2135 003c 08000000 		.4byte	.LFE7-.LFB7
 2136 0040 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 54


 2137 0044 48000000 		.4byte	.LFE8-.LFB8
 2138 0048 00000000 		.4byte	.LFB9
 2139 004c 44000000 		.4byte	.LFE9-.LFB9
 2140 0050 00000000 		.4byte	.LFB10
 2141 0054 1C000000 		.4byte	.LFE10-.LFB10
 2142 0058 00000000 		.4byte	.LFB11
 2143 005c 30000000 		.4byte	.LFE11-.LFB11
 2144 0060 00000000 		.4byte	.LFB12
 2145 0064 2C000000 		.4byte	.LFE12-.LFB12
 2146 0068 00000000 		.4byte	.LFB13
 2147 006c 1C000000 		.4byte	.LFE13-.LFB13
 2148 0070 00000000 		.4byte	.LFB14
 2149 0074 1C000000 		.4byte	.LFE14-.LFB14
 2150 0078 00000000 		.4byte	.LFB15
 2151 007c 30000000 		.4byte	.LFE15-.LFB15
 2152 0080 00000000 		.4byte	.LFB16
 2153 0084 2C000000 		.4byte	.LFE16-.LFB16
 2154 0088 00000000 		.4byte	.LFB17
 2155 008c A4000000 		.4byte	.LFE17-.LFB17
 2156 0090 00000000 		.4byte	.LFB18
 2157 0094 90000000 		.4byte	.LFE18-.LFB18
 2158 0098 00000000 		.4byte	.LFB19
 2159 009c 80000000 		.4byte	.LFE19-.LFB19
 2160 00a0 00000000 		.4byte	0
 2161 00a4 00000000 		.4byte	0
 2162              		.section	.debug_ranges,"",%progbits
 2163              	.Ldebug_ranges0:
 2164 0000 00000000 		.4byte	.LFB2
 2165 0004 24000000 		.4byte	.LFE2
 2166 0008 00000000 		.4byte	.LFB3
 2167 000c C4010000 		.4byte	.LFE3
 2168 0010 00000000 		.4byte	.LFB4
 2169 0014 38000000 		.4byte	.LFE4
 2170 0018 00000000 		.4byte	.LFB5
 2171 001c 18000000 		.4byte	.LFE5
 2172 0020 00000000 		.4byte	.LFB6
 2173 0024 14000000 		.4byte	.LFE6
 2174 0028 00000000 		.4byte	.LFB7
 2175 002c 08000000 		.4byte	.LFE7
 2176 0030 00000000 		.4byte	.LFB8
 2177 0034 48000000 		.4byte	.LFE8
 2178 0038 00000000 		.4byte	.LFB9
 2179 003c 44000000 		.4byte	.LFE9
 2180 0040 00000000 		.4byte	.LFB10
 2181 0044 1C000000 		.4byte	.LFE10
 2182 0048 00000000 		.4byte	.LFB11
 2183 004c 30000000 		.4byte	.LFE11
 2184 0050 00000000 		.4byte	.LFB12
 2185 0054 2C000000 		.4byte	.LFE12
 2186 0058 00000000 		.4byte	.LFB13
 2187 005c 1C000000 		.4byte	.LFE13
 2188 0060 00000000 		.4byte	.LFB14
 2189 0064 1C000000 		.4byte	.LFE14
 2190 0068 00000000 		.4byte	.LFB15
 2191 006c 30000000 		.4byte	.LFE15
 2192 0070 00000000 		.4byte	.LFB16
 2193 0074 2C000000 		.4byte	.LFE16
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 55


 2194 0078 00000000 		.4byte	.LFB17
 2195 007c A4000000 		.4byte	.LFE17
 2196 0080 00000000 		.4byte	.LFB18
 2197 0084 90000000 		.4byte	.LFE18
 2198 0088 00000000 		.4byte	.LFB19
 2199 008c 80000000 		.4byte	.LFE19
 2200 0090 00000000 		.4byte	0
 2201 0094 00000000 		.4byte	0
 2202              		.section	.debug_line,"",%progbits
 2203              	.Ldebug_line0:
 2204 0000 9D020000 		.section	.debug_str,"MS",%progbits,1
 2204      02004600 
 2204      00000201 
 2204      FB0E0D00 
 2204      01010101 
 2205              	.LASF28:
 2206 0000 4144435F 		.ascii	"ADC_SAP_StopConvert\000"
 2206      5341505F 
 2206      53746F70 
 2206      436F6E76 
 2206      65727400 
 2207              	.LASF19:
 2208 0014 72656733 		.ascii	"reg32\000"
 2208      3200
 2209              	.LASF59:
 2210 001a 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2210      4320342E 
 2210      392E3320 
 2210      32303135 
 2210      30333033 
 2211 004d 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2211      20726576 
 2211      6973696F 
 2211      6E203232 
 2211      31323230 
 2212 0080 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2212      66756E63 
 2212      74696F6E 
 2212      2D736563 
 2212      74696F6E 
 2213              	.LASF51:
 2214 00a8 4144435F 		.ascii	"ADC_SAP_CountsTo_uVolts\000"
 2214      5341505F 
 2214      436F756E 
 2214      7473546F 
 2214      5F75566F 
 2215              	.LASF35:
 2216 00c0 4144435F 		.ascii	"ADC_SAP_Init\000"
 2216      5341505F 
 2216      496E6974 
 2216      00
 2217              	.LASF45:
 2218 00cd 6F666673 		.ascii	"offset\000"
 2218      657400
 2219              	.LASF15:
 2220 00d4 666C6F61 		.ascii	"float\000"
 2220      7400
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 56


 2221              	.LASF41:
 2222 00da 68696768 		.ascii	"highLimit\000"
 2222      4C696D69 
 2222      7400
 2223              	.LASF38:
 2224 00e4 4144435F 		.ascii	"ADC_SAP_SetLowLimit\000"
 2224      5341505F 
 2224      5365744C 
 2224      6F774C69 
 2224      6D697400 
 2225              	.LASF52:
 2226 00f8 75566F6C 		.ascii	"uVolts\000"
 2226      747300
 2227              	.LASF3:
 2228 00ff 73686F72 		.ascii	"short unsigned int\000"
 2228      7420756E 
 2228      7369676E 
 2228      65642069 
 2228      6E7400
 2229              	.LASF53:
 2230 0112 4144435F 		.ascii	"ADC_SAP_CountsTo_Volts\000"
 2230      5341505F 
 2230      436F756E 
 2230      7473546F 
 2230      5F566F6C 
 2231              	.LASF48:
 2232 0129 4144435F 		.ascii	"ADC_SAP_CountsTo_mVolts\000"
 2232      5341505F 
 2232      436F756E 
 2232      7473546F 
 2232      5F6D566F 
 2233              	.LASF8:
 2234 0141 756E7369 		.ascii	"unsigned int\000"
 2234      676E6564 
 2234      20696E74 
 2234      00
 2235              	.LASF25:
 2236 014e 4144435F 		.ascii	"ADC_SAP_Enable\000"
 2236      5341505F 
 2236      456E6162 
 2236      6C6500
 2237              	.LASF29:
 2238 015d 73746174 		.ascii	"status\000"
 2238      757300
 2239              	.LASF27:
 2240 0164 4144435F 		.ascii	"ADC_SAP_StartConvert\000"
 2240      5341505F 
 2240      53746172 
 2240      74436F6E 
 2240      76657274 
 2241              	.LASF14:
 2242 0179 666C6F61 		.ascii	"float32\000"
 2242      74333200 
 2243              	.LASF22:
 2244 0181 746D7052 		.ascii	"tmpRegVal\000"
 2244      65675661 
 2244      6C00
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 57


 2245              	.LASF43:
 2246 018b 4144435F 		.ascii	"ADC_SAP_SetSatMask\000"
 2246      5341505F 
 2246      53657453 
 2246      61744D61 
 2246      736B00
 2247              	.LASF42:
 2248 019e 4144435F 		.ascii	"ADC_SAP_SetLimitMask\000"
 2248      5341505F 
 2248      5365744C 
 2248      696D6974 
 2248      4D61736B 
 2249              	.LASF1:
 2250 01b3 756E7369 		.ascii	"unsigned char\000"
 2250      676E6564 
 2250      20636861 
 2250      7200
 2251              	.LASF56:
 2252 01c1 4144435F 		.ascii	"ADC_SAP_initVar\000"
 2252      5341505F 
 2252      696E6974 
 2252      56617200 
 2253              	.LASF30:
 2254 01d1 4144435F 		.ascii	"ADC_SAP_IsEndConversion\000"
 2254      5341505F 
 2254      4973456E 
 2254      64436F6E 
 2254      76657273 
 2255              	.LASF5:
 2256 01e9 6C6F6E67 		.ascii	"long unsigned int\000"
 2256      20756E73 
 2256      69676E65 
 2256      6420696E 
 2256      7400
 2257              	.LASF13:
 2258 01fb 696E7433 		.ascii	"int32\000"
 2258      3200
 2259              	.LASF26:
 2260 0201 4144435F 		.ascii	"ADC_SAP_Stop\000"
 2260      5341505F 
 2260      53746F70 
 2260      00
 2261              	.LASF24:
 2262 020e 4144435F 		.ascii	"ADC_SAP_Start\000"
 2262      5341505F 
 2262      53746172 
 2262      7400
 2263              	.LASF16:
 2264 021c 646F7562 		.ascii	"double\000"
 2264      6C6500
 2265              	.LASF39:
 2266 0223 6C6F774C 		.ascii	"lowLimit\000"
 2266      696D6974 
 2266      00
 2267              	.LASF61:
 2268 022c 433A5C55 		.ascii	"C:\\Users\\zpstrwy\\Documents\\PSoC Creator\\IRCode"
 2268      73657273 
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 58


 2268      5C7A7073 
 2268      74727779 
 2268      5C446F63 
 2269 025a 5C495243 		.ascii	"\\IRCode.cydsn\000"
 2269      6F64652E 
 2269      63796473 
 2269      6E00
 2270              	.LASF47:
 2271 0268 61646347 		.ascii	"adcGain\000"
 2271      61696E00 
 2272              	.LASF10:
 2273 0270 75696E74 		.ascii	"uint16\000"
 2273      313600
 2274              	.LASF49:
 2275 0277 61646343 		.ascii	"adcCounts\000"
 2275      6F756E74 
 2275      7300
 2276              	.LASF11:
 2277 0281 75696E74 		.ascii	"uint32\000"
 2277      333200
 2278              	.LASF44:
 2279 0288 4144435F 		.ascii	"ADC_SAP_SetOffset\000"
 2279      5341505F 
 2279      5365744F 
 2279      66667365 
 2279      7400
 2280              	.LASF23:
 2281 029a 636F756E 		.ascii	"counts\000"
 2281      747300
 2282              	.LASF7:
 2283 02a1 6C6F6E67 		.ascii	"long long unsigned int\000"
 2283      206C6F6E 
 2283      6720756E 
 2283      7369676E 
 2283      65642069 
 2284              	.LASF31:
 2285 02b8 4144435F 		.ascii	"ADC_SAP_GetResult16\000"
 2285      5341505F 
 2285      47657452 
 2285      6573756C 
 2285      74313600 
 2286              	.LASF58:
 2287 02cc 4144435F 		.ascii	"ADC_SAP_countsPer10Volt\000"
 2287      5341505F 
 2287      636F756E 
 2287      74735065 
 2287      72313056 
 2288              	.LASF12:
 2289 02e4 696E7431 		.ascii	"int16\000"
 2289      3600
 2290              	.LASF36:
 2291 02ea 4144435F 		.ascii	"ADC_SAP_SetChanMask\000"
 2291      5341505F 
 2291      53657443 
 2291      68616E4D 
 2291      61736B00 
 2292              	.LASF54:
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 59


 2293 02fe 766F6C74 		.ascii	"volts\000"
 2293      7300
 2294              	.LASF46:
 2295 0304 4144435F 		.ascii	"ADC_SAP_SetGain\000"
 2295      5341505F 
 2295      53657447 
 2295      61696E00 
 2296              	.LASF50:
 2297 0314 6D566F6C 		.ascii	"mVolts\000"
 2297      747300
 2298              	.LASF20:
 2299 031b 73697A65 		.ascii	"sizetype\000"
 2299      74797065 
 2299      00
 2300              	.LASF6:
 2301 0324 6C6F6E67 		.ascii	"long long int\000"
 2301      206C6F6E 
 2301      6720696E 
 2301      7400
 2302              	.LASF37:
 2303 0332 6D61736B 		.ascii	"mask\000"
 2303      00
 2304              	.LASF21:
 2305 0337 63684E75 		.ascii	"chNum\000"
 2305      6D00
 2306              	.LASF32:
 2307 033d 7265744D 		.ascii	"retMode\000"
 2307      6F646500 
 2308              	.LASF33:
 2309 0345 6368616E 		.ascii	"chan\000"
 2309      00
 2310              	.LASF2:
 2311 034a 73686F72 		.ascii	"short int\000"
 2311      7420696E 
 2311      7400
 2312              	.LASF9:
 2313 0354 75696E74 		.ascii	"uint8\000"
 2313      3800
 2314              	.LASF57:
 2315 035a 4144435F 		.ascii	"ADC_SAP_offset\000"
 2315      5341505F 
 2315      6F666673 
 2315      657400
 2316              	.LASF4:
 2317 0369 6C6F6E67 		.ascii	"long int\000"
 2317      20696E74 
 2317      00
 2318              	.LASF18:
 2319 0372 63686172 		.ascii	"char\000"
 2319      00
 2320              	.LASF55:
 2321 0377 4144435F 		.ascii	"ADC_SAP_channelsConfig\000"
 2321      5341505F 
 2321      6368616E 
 2321      6E656C73 
 2321      436F6E66 
 2322              	.LASF0:
ARM GAS  C:\Users\zpstrwy\AppData\Local\Temp\cc1GCVkd.s 			page 60


 2323 038e 7369676E 		.ascii	"signed char\000"
 2323      65642063 
 2323      68617200 
 2324              	.LASF60:
 2325 039a 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ADC_SAP.c\000"
 2325      6E657261 
 2325      7465645F 
 2325      536F7572 
 2325      63655C50 
 2326              	.LASF34:
 2327 03bd 72657375 		.ascii	"result\000"
 2327      6C7400
 2328              	.LASF17:
 2329 03c4 696E7436 		.ascii	"int64\000"
 2329      3400
 2330              	.LASF40:
 2331 03ca 4144435F 		.ascii	"ADC_SAP_SetHighLimit\000"
 2331      5341505F 
 2331      53657448 
 2331      6967684C 
 2331      696D6974 
 2332              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
